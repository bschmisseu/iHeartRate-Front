{"ast":null,"code":"var _jsxFileName = \"/Users/bryceschmisseur/Desktop/IHeartRate/frontend/src/pages/Test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport SideBar from './../components/nav/SideBar';\nimport Table from '@material-ui/core/Table';\nimport Footer from './../components/nav/Footer';\nimport HeartRateService from './../services/HeartRateService';\nimport moment from 'moment';\nimport Paper from '@material-ui/core/Paper';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Chartkick, { LineChart } from 'react-chartkick';\nimport Highcharts from 'highcharts';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport Typography from '@material-ui/core/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartkick.use(Highcharts);\nconst useStyles = makeStyles(theme => ({\n  gridRight: {\n    padding: '25px'\n  },\n  heading: {\n    marginBottom: '0px'\n  },\n  rootTable: {\n    width: '100%'\n  },\n  containerTable: {\n    maxHeight: 465,\n    minHeight: 465\n  },\n  rootHead: {\n    flexGrow: 1\n  },\n  welcome: {\n    textAlign: 'left',\n    fontWeight: '250',\n    fontSize: '28px'\n  },\n  signIn: {\n    textAlign: 'right',\n    fontWeight: '250'\n  },\n  button: {\n    background: 'linear-gradient(#ac1c13, #bf4342)',\n    color: 'white',\n    fontFamily: '-apple-system-body, BlinkMacSystemFont, sans-serif',\n    fontWeight: '300'\n  },\n  rootChart: {\n    width: '100%',\n    padding: '0px'\n  },\n  chartTitle: {\n    fontFamily: '-apple-system-body, BlinkMacSystemFont, sans-serif',\n    fontWeight: '300',\n    fontSize: '24px',\n    textAlign: 'center',\n    padding: '10px'\n  },\n  titleRate: {\n    fontFamily: '-apple-system-body, BlinkMacSystemFont, sans-serif',\n    fontWeight: '300',\n    fontSize: '18px',\n    textAlign: 'center',\n    padding: '0px'\n  },\n  listLabelRate: {\n    fontFamily: '-apple-system-body, BlinkMacSystemFont, sans-serif',\n    fontWeight: '100',\n    fontSize: '23px',\n    textAlign: 'left'\n  }\n}));\nconst columns = [{\n  id: 'bpm',\n  label: 'Beats per Minute',\n  align: 'center'\n}, {\n  id: 'date',\n  label: 'Date/Time Recorded',\n  minWidth: 170,\n  align: 'center',\n  format: value => value.toLocaleString('en-US')\n}];\n\nfunction createData(unNum, bpm, date) {\n  return {\n    unNum,\n    bpm,\n    date\n  };\n}\n\nexport default function Test() {\n  _s();\n\n  const classes = useStyles();\n  const [heartData, setHeartData] = useState([]);\n  const [rows, setRows] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [data, setData] = useState(JSON.parse(\"{}\"));\n  const [avgRate, setAvgRate] = useState(0);\n  const [lastRec, setLastRec] = useState(0);\n  useEffect(() => {\n    HeartRateService.getUsers('001072.b2df559565e4408586c5ff8852b01b65.0530').then(response => {\n      let arr = [];\n      Object.keys(response.data).forEach(function (key) {\n        let currDate = moment(response.data[key].date.substring(0, 19));\n        let HeartRate = {\n          bpm: response.data[key].bpm,\n          date: currDate,\n          user_id: response.data[key].userid\n        };\n        arr.push(HeartRate);\n      });\n      let arrTable = arr.reverse();\n      setLastRec(arrTable[0].bpm);\n      setHeartData(arrTable);\n      let data = [];\n\n      for (let i = 0; i < arrTable.length; i++) {\n        data.push(createData(i, arrTable[i].bpm, arrTable[i].date.format('lll')));\n      }\n\n      setRows(data);\n      let chartdata = \"{\";\n      let currAveRate = 0;\n\n      for (let i = 0; i < 10; i++) {\n        currAveRate += arrTable[i].bpm;\n        chartdata += '\"' + arrTable[i].date.format() + '\": ' + arrTable[i].bpm;\n\n        if (i !== 9) {\n          chartdata += \",\";\n        }\n      }\n\n      chartdata += \"}\";\n      setData(JSON.parse(chartdata));\n      setAvgRate(Math.round(currAveRate / 10));\n    });\n  }, []);\n\n  const updateGraph = (newPage, rowsPerPageNew) => {\n    let chartdata = \"{\";\n    let currAveRate = 0;\n\n    for (let i = newPage * rowsPerPage; i < rowsPerPage * newPage + rowsPerPage; i++) {\n      if (i > heartData.length - 1) {\n        break;\n      }\n\n      currAveRate += heartData[i].bpm;\n      chartdata += '\"' + heartData[i].date.format() + '\": ' + heartData[i].bpm + ',';\n    }\n\n    chartdata = chartdata.substring(0, chartdata.length - 1);\n    chartdata += \"}\";\n    setData(JSON.parse(chartdata));\n    setAvgRate(Math.round(currAveRate / 10));\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n    let chartdata = \"{\";\n    let currAveRate = 0;\n\n    for (let i = newPage * rowsPerPage; i < rowsPerPage * newPage + rowsPerPage; i++) {\n      if (i > heartData.length - 1) {\n        break;\n      }\n\n      currAveRate += heartData[i].bpm;\n      chartdata += '\"' + heartData[i].date.format() + '\": ' + heartData[i].bpm + ',';\n    }\n\n    chartdata = chartdata.substring(0, chartdata.length - 1);\n    chartdata += \"}\";\n    setData(JSON.parse(chartdata));\n    setAvgRate(Math.round(currAveRate / 10));\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        lg: 10,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.gridRight,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.heading,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.rootHead,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  className: classes.welcome,\n                  item: true,\n                  xs: 6,\n                  children: [\"Welcome, Bryce Schmisseur\", /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      fontSize: '20px'\n                    },\n                    children: \"This is your Dashboard\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  className: classes.signIn,\n                  item: true,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    className: classes.button,\n                    children: \"Select Dates\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              className: classes.gridRight,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Paper, {\n                className: classes.rootTable,\n                children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n                  className: classes.containerTable,\n                  children: /*#__PURE__*/_jsxDEV(Table, {\n                    stickyHeader: true,\n                    \"aria-label\": \"sticky table\",\n                    children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                      children: /*#__PURE__*/_jsxDEV(TableRow, {\n                        children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                          align: column.align,\n                          style: {\n                            minWidth: column.minWidth\n                          },\n                          children: column.label\n                        }, column.id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 221,\n                          columnNumber: 37\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 219,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                      id: \"currentRows\",\n                      children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n                        return /*#__PURE__*/_jsxDEV(TableRow, {\n                          hover: true,\n                          role: \"checkbox\",\n                          tabIndex: -1,\n                          children: columns.map(column => {\n                            const value = row[column.id];\n                            return /*#__PURE__*/_jsxDEV(TableCell, {\n                              align: column.align,\n                              children: column.format && typeof value === 'number' ? column.format(value) : value\n                            }, column.id, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 238,\n                              columnNumber: 41\n                            }, this);\n                          })\n                        }, row.unNum, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 234,\n                          columnNumber: 37\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 231,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n                  rowsPerPageOptions: [10, 25, 100],\n                  component: \"div\",\n                  count: rows.length,\n                  rowsPerPage: rowsPerPage,\n                  page: page,\n                  onChangePage: handleChangePage,\n                  onChangeRowsPerPage: handleChangeRowsPerPage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              className: classes.gridRight,\n              xs: 6,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Paper, {\n                  className: classes.rootGraph,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: classes.chartTitle,\n                    children: \"BPM VS Time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n                    titel: \"Heart Rate\",\n                    ytitle: \"Beats per Minute (BPM)\",\n                    xtitle: \"Date Time\",\n                    data: data\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  className: classes.gridRight,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(Paper, {\n                    style: {\n                      padding: '15px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: classes.titleRate,\n                      children: \"Average Heart Rate\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 276,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(List, {\n                      children: /*#__PURE__*/_jsxDEV(ListItem, {\n                        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                          style: {\n                            fontSize: 'large'\n                          },\n                          children: /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 279,\n                            columnNumber: 87\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 279,\n                          columnNumber: 45\n                        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                          children: /*#__PURE__*/_jsxDEV(Typography, {\n                            className: classes.listLabelRate,\n                            children: [avgRate, \" BPM\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 280,\n                            columnNumber: 59\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 280,\n                          columnNumber: 45\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 278,\n                        columnNumber: 41\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 277,\n                      columnNumber: 37\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  className: classes.gridRight,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(Paper, {\n                    style: {\n                      padding: '15px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: classes.titleRate,\n                      children: \"Last Recorded\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 287,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(List, {\n                      children: /*#__PURE__*/_jsxDEV(ListItem, {\n                        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                          style: {\n                            fontSize: 'large'\n                          },\n                          children: /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 290,\n                            columnNumber: 87\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 290,\n                          columnNumber: 45\n                        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                          children: /*#__PURE__*/_jsxDEV(Typography, {\n                            className: classes.listLabelRate,\n                            children: [lastRec, \" BPM\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 291,\n                            columnNumber: 59\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 291,\n                          columnNumber: 45\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 289,\n                        columnNumber: 41\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 288,\n                      columnNumber: 37\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Test, \"VGO1DHJ3hgKAB6EalldTz4wgo9Y=\", false, function () {\n  return [useStyles];\n});\n\n_c = Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/Users/bryceschmisseur/Desktop/IHeartRate/frontend/src/pages/Test.js"],"names":["React","useState","useEffect","makeStyles","Grid","SideBar","Table","Footer","HeartRateService","moment","Paper","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Button","Chartkick","LineChart","Highcharts","List","ListItem","ListItemIcon","ListItemText","FavoriteIcon","Typography","use","useStyles","theme","gridRight","padding","heading","marginBottom","rootTable","width","containerTable","maxHeight","minHeight","rootHead","flexGrow","welcome","textAlign","fontWeight","fontSize","signIn","button","background","color","fontFamily","rootChart","chartTitle","titleRate","listLabelRate","columns","id","label","align","minWidth","format","value","toLocaleString","createData","unNum","bpm","date","Test","classes","heartData","setHeartData","rows","setRows","page","setPage","rowsPerPage","setRowsPerPage","data","setData","JSON","parse","avgRate","setAvgRate","lastRec","setLastRec","getUsers","then","response","arr","Object","keys","forEach","key","currDate","substring","HeartRate","user_id","userid","push","arrTable","reverse","i","length","chartdata","currAveRate","Math","round","updateGraph","newPage","rowsPerPageNew","handleChangePage","event","handleChangeRowsPerPage","target","root","map","column","slice","row","rootGraph"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,IAAoBC,SAApB,QAAqC,iBAArC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEAR,SAAS,CAACS,GAAV,CAAcP,UAAd;AAEA,MAAMQ,SAAS,GAAGzB,UAAU,CAAE0B,KAAD,KAAY;AACvCC,EAAAA,SAAS,EAAE;AACPC,IAAAA,OAAO,EAAE;AADF,GAD4B;AAIvCC,EAAAA,OAAO,EAAE;AACLC,IAAAA,YAAY,EAAE;AADT,GAJ8B;AAOvCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAAE;AADE,GAP4B;AAWvCC,EAAAA,cAAc,EAAE;AACdC,IAAAA,SAAS,EAAE,GADG;AAEdC,IAAAA,SAAS,EAAE;AAFG,GAXuB;AAevCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE;AADF,GAf6B;AAkBvCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,SAAS,EAAE,MADJ;AAEPC,IAAAA,UAAU,EAAE,KAFL;AAGPC,IAAAA,QAAQ,EAAE;AAHH,GAlB8B;AAuBvCC,EAAAA,MAAM,EAAE;AACNH,IAAAA,SAAS,EAAE,OADL;AAENC,IAAAA,UAAU,EAAE;AAFN,GAvB+B;AA2BvCG,EAAAA,MAAM,EAAE;AACNC,IAAAA,UAAU,EAAE,mCADN;AAENC,IAAAA,KAAK,EAAE,OAFD;AAGNC,IAAAA,UAAU,EAAE,oDAHN;AAINN,IAAAA,UAAU,EAAE;AAJN,GA3B+B;AAiCvCO,EAAAA,SAAS,EAAE;AACTf,IAAAA,KAAK,EAAE,MADE;AAETJ,IAAAA,OAAO,EAAE;AAFA,GAjC4B;AAqCvCoB,EAAAA,UAAU,EAAE;AACRF,IAAAA,UAAU,EAAE,oDADJ;AAERN,IAAAA,UAAU,EAAE,KAFJ;AAGRC,IAAAA,QAAQ,EAAE,MAHF;AAIRF,IAAAA,SAAS,EAAE,QAJH;AAKRX,IAAAA,OAAO,EAAE;AALD,GArC2B;AA4CvCqB,EAAAA,SAAS,EAAE;AACTH,IAAAA,UAAU,EAAE,oDADH;AAETN,IAAAA,UAAU,EAAE,KAFH;AAGTC,IAAAA,QAAQ,EAAE,MAHD;AAITF,IAAAA,SAAS,EAAE,QAJF;AAKTX,IAAAA,OAAO,EAAE;AALA,GA5C4B;AAmDrCsB,EAAAA,aAAa,EAAE;AACXJ,IAAAA,UAAU,EAAE,oDADD;AAEXN,IAAAA,UAAU,EAAE,KAFD;AAGXC,IAAAA,QAAQ,EAAE,MAHC;AAIXF,IAAAA,SAAS,EAAE;AAJA;AAnDsB,CAAZ,CAAD,CAA5B;AA2DA,MAAMY,OAAO,GAAG,CACZ;AACEC,EAAAA,EAAE,EAAE,KADN;AAEEC,EAAAA,KAAK,EAAE,kBAFT;AAGEC,EAAAA,KAAK,EAAE;AAHT,CADY,EAMZ;AACEF,EAAAA,EAAE,EAAE,MADN;AAEEC,EAAAA,KAAK,EAAE,oBAFT;AAGEE,EAAAA,QAAQ,EAAE,GAHZ;AAIED,EAAAA,KAAK,EAAE,QAJT;AAKEE,EAAAA,MAAM,EAAGC,KAAD,IAAWA,KAAK,CAACC,cAAN,CAAqB,OAArB;AALrB,CANY,CAAhB;;AAeA,SAASC,UAAT,CAAoBC,KAApB,EAA2BC,GAA3B,EAAgCC,IAAhC,EAAsC;AAClC,SAAO;AAACF,IAAAA,KAAD;AAAQC,IAAAA,GAAR;AAAaC,IAAAA;AAAb,GAAP;AACH;;AAED,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAMC,OAAO,GAAGvC,SAAS,EAAzB;AAEA,QAAM,CAACwC,SAAD,EAAYC,YAAZ,IAA4BpE,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACqE,IAAD,EAAOC,OAAP,IAAkBtE,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACuE,IAAD,EAAOC,OAAP,IAAkBxE,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACyE,WAAD,EAAcC,cAAd,IAAgC1E,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAC2E,IAAD,EAAOC,OAAP,IAAkB5E,QAAQ,CAAC6E,IAAI,CAACC,KAAL,CAAW,IAAX,CAAD,CAAhC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBhF,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACiF,OAAD,EAAUC,UAAV,IAAwBlF,QAAQ,CAAC,CAAD,CAAtC;AAEEC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,gBAAgB,CAAC4E,QAAjB,CAA0B,8CAA1B,EAA0EC,IAA1E,CAA+EC,QAAQ,IAAI;AACvF,UAAIC,GAAG,GAAG,EAAV;AACAC,MAAAA,MAAM,CAACC,IAAP,CAAYH,QAAQ,CAACV,IAArB,EAA2Bc,OAA3B,CAAmC,UAASC,GAAT,EAAc;AAC7C,YAAIC,QAAQ,GAAGnF,MAAM,CAAC6E,QAAQ,CAACV,IAAT,CAAce,GAAd,EAAmB1B,IAAnB,CAAwB4B,SAAxB,CAAkC,CAAlC,EAAqC,EAArC,CAAD,CAArB;AACA,YAAIC,SAAS,GAAG;AACZ9B,UAAAA,GAAG,EAAEsB,QAAQ,CAACV,IAAT,CAAce,GAAd,EAAmB3B,GADZ;AAEZC,UAAAA,IAAI,EAAE2B,QAFM;AAGZG,UAAAA,OAAO,EAAET,QAAQ,CAACV,IAAT,CAAce,GAAd,EAAmBK;AAHhB,SAAhB;AAKAT,QAAAA,GAAG,CAACU,IAAJ,CAASH,SAAT;AACH,OARD;AASA,UAAII,QAAQ,GAAGX,GAAG,CAACY,OAAJ,EAAf;AACAhB,MAAAA,UAAU,CAACe,QAAQ,CAAC,CAAD,CAAR,CAAYlC,GAAb,CAAV;AACAK,MAAAA,YAAY,CAAC6B,QAAD,CAAZ;AACA,UAAItB,IAAI,GAAG,EAAX;;AACA,WAAI,IAAIwB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,QAAQ,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAwC;AACtCxB,QAAAA,IAAI,CAACqB,IAAL,CAAUnC,UAAU,CAACsC,CAAD,EAAIF,QAAQ,CAACE,CAAD,CAAR,CAAYpC,GAAhB,EAAqBkC,QAAQ,CAACE,CAAD,CAAR,CAAYnC,IAAZ,CAAiBN,MAAjB,CAAwB,KAAxB,CAArB,CAApB;AACD;;AACDY,MAAAA,OAAO,CAACK,IAAD,CAAP;AACA,UAAI0B,SAAS,GAAG,GAAhB;AACA,UAAIC,WAAW,GAAG,CAAlB;;AACA,WAAI,IAAIH,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA2B;AACvBG,QAAAA,WAAW,IAAIL,QAAQ,CAACE,CAAD,CAAR,CAAYpC,GAA3B;AACAsC,QAAAA,SAAS,IAAI,MAAMJ,QAAQ,CAACE,CAAD,CAAR,CAAYnC,IAAZ,CAAiBN,MAAjB,EAAN,GAAkC,KAAlC,GAA0CuC,QAAQ,CAACE,CAAD,CAAR,CAAYpC,GAAnE;;AACA,YAAGoC,CAAC,KAAK,CAAT,EAAW;AACPE,UAAAA,SAAS,IAAI,GAAb;AACH;AACJ;;AACDA,MAAAA,SAAS,IAAI,GAAb;AACAzB,MAAAA,OAAO,CAACC,IAAI,CAACC,KAAL,CAAWuB,SAAX,CAAD,CAAP;AACArB,MAAAA,UAAU,CAACuB,IAAI,CAACC,KAAL,CAAWF,WAAW,GAAG,EAAzB,CAAD,CAAV;AACH,KA/BD;AAgCH,GAjCQ,EAiCN,EAjCM,CAAT;;AAmCA,QAAMG,WAAW,GAAG,CAACC,OAAD,EAAUC,cAAV,KAA6B;AAC7C,QAAIN,SAAS,GAAG,GAAhB;AACA,QAAIC,WAAW,GAAG,CAAlB;;AACA,SAAI,IAAIH,CAAC,GAAIO,OAAO,GAAGjC,WAAvB,EAAqC0B,CAAC,GAAK1B,WAAW,GAAGiC,OAAf,GAA0BjC,WAApE,EAAkF0B,CAAC,EAAnF,EAAsF;AAClF,UAAGA,CAAC,GAAGhC,SAAS,CAACiC,MAAV,GAAmB,CAA1B,EACA;AACI;AACH;;AACDE,MAAAA,WAAW,IAAInC,SAAS,CAACgC,CAAD,CAAT,CAAapC,GAA5B;AACAsC,MAAAA,SAAS,IAAI,MAAMlC,SAAS,CAACgC,CAAD,CAAT,CAAanC,IAAb,CAAkBN,MAAlB,EAAN,GAAmC,KAAnC,GAA2CS,SAAS,CAACgC,CAAD,CAAT,CAAapC,GAAxD,GAA8D,GAA3E;AACH;;AACDsC,IAAAA,SAAS,GAAGA,SAAS,CAACT,SAAV,CAAoB,CAApB,EAAuBS,SAAS,CAACD,MAAV,GAAmB,CAA1C,CAAZ;AACAC,IAAAA,SAAS,IAAI,GAAb;AACAzB,IAAAA,OAAO,CAACC,IAAI,CAACC,KAAL,CAAWuB,SAAX,CAAD,CAAP;AACArB,IAAAA,UAAU,CAACuB,IAAI,CAACC,KAAL,CAAWF,WAAW,GAAG,EAAzB,CAAD,CAAV;AACH,GAfD;;AAiBA,QAAMM,gBAAgB,GAAG,CAACC,KAAD,EAAQH,OAAR,KAAoB;AACzClC,IAAAA,OAAO,CAACkC,OAAD,CAAP;AACA,QAAIL,SAAS,GAAG,GAAhB;AACA,QAAIC,WAAW,GAAG,CAAlB;;AACA,SAAI,IAAIH,CAAC,GAAIO,OAAO,GAAGjC,WAAvB,EAAqC0B,CAAC,GAAK1B,WAAW,GAAGiC,OAAf,GAA0BjC,WAApE,EAAkF0B,CAAC,EAAnF,EAAsF;AAClF,UAAGA,CAAC,GAAGhC,SAAS,CAACiC,MAAV,GAAmB,CAA1B,EACA;AACI;AACH;;AACDE,MAAAA,WAAW,IAAInC,SAAS,CAACgC,CAAD,CAAT,CAAapC,GAA5B;AACAsC,MAAAA,SAAS,IAAI,MAAMlC,SAAS,CAACgC,CAAD,CAAT,CAAanC,IAAb,CAAkBN,MAAlB,EAAN,GAAmC,KAAnC,GAA2CS,SAAS,CAACgC,CAAD,CAAT,CAAapC,GAAxD,GAA8D,GAA3E;AACH;;AACDsC,IAAAA,SAAS,GAAGA,SAAS,CAACT,SAAV,CAAoB,CAApB,EAAuBS,SAAS,CAACD,MAAV,GAAmB,CAA1C,CAAZ;AACAC,IAAAA,SAAS,IAAI,GAAb;AACAzB,IAAAA,OAAO,CAACC,IAAI,CAACC,KAAL,CAAWuB,SAAX,CAAD,CAAP;AACArB,IAAAA,UAAU,CAACuB,IAAI,CAACC,KAAL,CAAWF,WAAW,GAAG,EAAzB,CAAD,CAAV;AACH,GAhBD;;AAkBA,QAAMQ,uBAAuB,GAAID,KAAD,IAAW;AACvCnC,IAAAA,cAAc,CAAC,CAACmC,KAAK,CAACE,MAAN,CAAapD,KAAf,CAAd;AACAa,IAAAA,OAAO,CAAC,CAAD,CAAP;AACH,GAHD;;AAKF,sBACE;AAAK,IAAA,SAAS,EAAEN,OAAO,CAAC8C,IAAxB;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA,8BACE,QAAC,IAAD;AAAA,+BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAE,EAAV;AAAA,+BACI;AAAK,UAAA,SAAS,EAAE9C,OAAO,CAACrC,SAAxB;AAAA,kCACI;AAAK,YAAA,SAAS,EAAEqC,OAAO,CAACnC,OAAxB;AAAA,mCACI;AAAK,cAAA,SAAS,EAAEmC,OAAO,CAAC5B,QAAxB;AAAA,qCACI,QAAC,IAAD;AAAM,gBAAA,SAAS,MAAf;AAAgB,gBAAA,OAAO,EAAE,CAAzB;AAAA,wCACI,QAAC,IAAD;AAAM,kBAAA,SAAS,EAAE4B,OAAO,CAAC1B,OAAzB;AAAkC,kBAAA,IAAI,MAAtC;AAAuC,kBAAA,EAAE,EAAE,CAA3C;AAAA,uEAEI;AAAK,oBAAA,KAAK,EAAE;AAACG,sBAAAA,QAAQ,EAAE;AAAX,qBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAKI,QAAC,IAAD;AAAM,kBAAA,SAAS,EAAEuB,OAAO,CAACtB,MAAzB;AAAiC,kBAAA,IAAI,MAArC;AAAsC,kBAAA,EAAE,EAAE,CAA1C;AAAA,yCACA,QAAC,MAAD;AAAQ,oBAAA,SAAS,EAAEsB,OAAO,CAACrB,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,wBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAcI,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAA,oCACI,QAAC,IAAD;AAAM,cAAA,SAAS,EAAEqB,OAAO,CAACrC,SAAzB;AAAoC,cAAA,EAAE,EAAE,CAAxC;AAAA,qCACI,QAAC,KAAD;AAAO,gBAAA,SAAS,EAAEqC,OAAO,CAACjC,SAA1B;AAAA,wCACA,QAAC,cAAD;AAAgB,kBAAA,SAAS,EAAEiC,OAAO,CAAC/B,cAAnC;AAAA,yCACI,QAAC,KAAD;AAAO,oBAAA,YAAY,MAAnB;AAAoB,kCAAW,cAA/B;AAAA,4CACA,QAAC,SAAD;AAAA,6CACI,QAAC,QAAD;AAAA,kCACCkB,OAAO,CAAC4D,GAAR,CAAaC,MAAD,iBACT,QAAC,SAAD;AAEA,0BAAA,KAAK,EAAEA,MAAM,CAAC1D,KAFd;AAGA,0BAAA,KAAK,EAAE;AAAEC,4BAAAA,QAAQ,EAAEyD,MAAM,CAACzD;AAAnB,2BAHP;AAAA,oCAKCyD,MAAM,CAAC3D;AALR,2BACK2D,MAAM,CAAC5D,EADZ;AAAA;AAAA;AAAA;AAAA,gCADH;AADD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,4BADA,eAcA,QAAC,SAAD;AAAW,sBAAA,EAAE,EAAC,aAAd;AAAA,gCACKe,IAAI,CAAC8C,KAAL,CAAW5C,IAAI,GAAGE,WAAlB,EAA+BF,IAAI,GAAGE,WAAP,GAAqBA,WAApD,EAAiEwC,GAAjE,CAAsEG,GAAD,IAAS;AAC/E,4CACI,QAAC,QAAD;AAAU,0BAAA,KAAK,MAAf;AAAgB,0BAAA,IAAI,EAAC,UAArB;AAAgC,0BAAA,QAAQ,EAAE,CAAC,CAA3C;AAAA,oCACC/D,OAAO,CAAC4D,GAAR,CAAaC,MAAD,IAAY;AACrB,kCAAMvD,KAAK,GAAGyD,GAAG,CAACF,MAAM,CAAC5D,EAAR,CAAjB;AACA,gDACA,QAAC,SAAD;AAA2B,8BAAA,KAAK,EAAE4D,MAAM,CAAC1D,KAAzC;AAAA,wCACK0D,MAAM,CAACxD,MAAP,IAAiB,OAAOC,KAAP,KAAiB,QAAlC,GAA6CuD,MAAM,CAACxD,MAAP,CAAcC,KAAd,CAA7C,GAAoEA;AADzE,+BAAgBuD,MAAM,CAAC5D,EAAvB;AAAA;AAAA;AAAA;AAAA,oCADA;AAKH,2BAPA;AADD,2BAAmD8D,GAAG,CAACtD,KAAvD;AAAA;AAAA;AAAA;AAAA,gCADJ;AAYC,uBAbA;AADL;AAAA;AAAA;AAAA;AAAA,4BAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBADA,eAkCA,QAAC,eAAD;AACI,kBAAA,kBAAkB,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,GAAT,CADxB;AAEI,kBAAA,SAAS,EAAC,KAFd;AAGI,kBAAA,KAAK,EAAEO,IAAI,CAAC+B,MAHhB;AAII,kBAAA,WAAW,EAAE3B,WAJjB;AAKI,kBAAA,IAAI,EAAEF,IALV;AAMI,kBAAA,YAAY,EAAEqC,gBANlB;AAOI,kBAAA,mBAAmB,EAAEE;AAPzB;AAAA;AAAA;AAAA;AAAA,wBAlCA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eA+CI,QAAC,IAAD;AAAM,cAAA,SAAS,EAAE5C,OAAO,CAACrC,SAAzB;AAAoC,cAAA,EAAE,EAAE,CAAxC;AAAA,sCACI;AAAA,uCACI,QAAC,KAAD;AAAO,kBAAA,SAAS,EAAEqC,OAAO,CAACmD,SAA1B;AAAA,0CACI;AAAK,oBAAA,SAAS,EAAEnD,OAAO,CAAChB,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAIA,QAAC,SAAD;AACI,oBAAA,KAAK,EAAG,YADZ;AAEI,oBAAA,MAAM,EAAE,wBAFZ;AAGI,oBAAA,MAAM,EAAE,WAHZ;AAII,oBAAA,IAAI,EAAEyB;AAJV;AAAA;AAAA;AAAA;AAAA,0BAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAaI,QAAC,IAAD;AAAM,gBAAA,SAAS,MAAf;AAAA,wCACI,QAAC,IAAD;AAAM,kBAAA,SAAS,EAAET,OAAO,CAACrC,SAAzB;AAAoC,kBAAA,EAAE,EAAE,CAAxC;AAAA,yCACI,QAAC,KAAD;AAAO,oBAAA,KAAK,EAAE;AAACC,sBAAAA,OAAO,EAAE;AAAV,qBAAd;AAAA,4CACI;AAAK,sBAAA,SAAS,EAAEoC,OAAO,CAACf,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI,QAAC,IAAD;AAAA,6CACI,QAAC,QAAD;AAAA,gDACI,QAAC,YAAD;AAAc,0BAAA,KAAK,EAAE;AAACR,4BAAAA,QAAQ,EAAE;AAAX,2BAArB;AAAA,iDAA0C,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAA1C;AAAA;AAAA;AAAA;AAAA,gCADJ,eAEI,QAAC,YAAD;AAAA,iDAAc,QAAC,UAAD;AAAY,4BAAA,SAAS,EAAEuB,OAAO,CAACd,aAA/B;AAAA,uCAA+C2B,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAd;AAAA;AAAA;AAAA;AAAA,gCAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,4BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBADJ,eAYI,QAAC,IAAD;AAAM,kBAAA,SAAS,EAAEb,OAAO,CAACrC,SAAzB;AAAoC,kBAAA,EAAE,EAAE,CAAxC;AAAA,yCACI,QAAC,KAAD;AAAO,oBAAA,KAAK,EAAE;AAACC,sBAAAA,OAAO,EAAE;AAAV,qBAAd;AAAA,4CACI;AAAK,sBAAA,SAAS,EAAEoC,OAAO,CAACf,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI,QAAC,IAAD;AAAA,6CACI,QAAC,QAAD;AAAA,gDACI,QAAC,YAAD;AAAc,0BAAA,KAAK,EAAE;AAACR,4BAAAA,QAAQ,EAAE;AAAX,2BAArB;AAAA,iDAA0C,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAA1C;AAAA;AAAA;AAAA;AAAA,gCADJ,eAEI,QAAC,YAAD;AAAA,iDAAc,QAAC,UAAD;AAAY,4BAAA,SAAS,EAAEuB,OAAO,CAACd,aAA/B;AAAA,uCAA+C6B,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAd;AAAA;AAAA;AAAA;AAAA,gCAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,4BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBA/CJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdJ,eAoGI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,kBApGJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiHD;;GAvMuBhB,I;UACNtC,S;;;KADMsC,I","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport SideBar from './../components/nav/SideBar';\nimport Table from '@material-ui/core/Table';\nimport Footer from './../components/nav/Footer';\nimport HeartRateService from './../services/HeartRateService';\nimport moment from 'moment';\nimport Paper from '@material-ui/core/Paper';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Chartkick, { LineChart } from 'react-chartkick';\nimport Highcharts from 'highcharts';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport Typography from '@material-ui/core/Typography';\n\nChartkick.use(Highcharts);\n\nconst useStyles = makeStyles((theme) => ({\n  gridRight: {\n      padding: '25px',\n  },\n  heading: {\n      marginBottom: '0px',\n  },\n  rootTable: {\n    width: '100%',\n\n  },\n  containerTable: {\n    maxHeight: 465,\n    minHeight: 465,\n  },\n  rootHead: {\n    flexGrow: 1,\n  },\n  welcome: {\n    textAlign: 'left',\n    fontWeight: '250',\n    fontSize: '28px'\n  },\n  signIn: {\n    textAlign: 'right',\n    fontWeight: '250',\n  },\n  button: {\n    background: 'linear-gradient(#ac1c13, #bf4342)',\n    color: 'white',\n    fontFamily: '-apple-system-body, BlinkMacSystemFont, sans-serif',\n    fontWeight: '300',\n  },\n  rootChart: {\n    width: '100%',\n    padding: '0px',\n  },\n  chartTitle: {\n      fontFamily: '-apple-system-body, BlinkMacSystemFont, sans-serif',\n      fontWeight: '300',\n      fontSize: '24px',\n      textAlign: 'center',\n      padding: '10px'\n  },\n  titleRate: {\n    fontFamily: '-apple-system-body, BlinkMacSystemFont, sans-serif',\n    fontWeight: '300',\n    fontSize: '18px',\n    textAlign: 'center',\n    padding: '0px'\n    },\n    listLabelRate: {\n        fontFamily: '-apple-system-body, BlinkMacSystemFont, sans-serif',\n        fontWeight: '100',\n        fontSize: '23px',\n        textAlign: 'left'\n    },\n}));\n\nconst columns = [\n    { \n      id: 'bpm', \n      label: 'Beats per Minute',\n      align: 'center' \n      },\n    {\n      id: 'date',\n      label: 'Date/Time Recorded',\n      minWidth: 170,\n      align: 'center',\n      format: (value) => value.toLocaleString('en-US'),\n    },\n  ];\n\nfunction createData(unNum, bpm, date) {\n    return {unNum, bpm, date };\n}\n\nexport default function Test() {\n  const classes = useStyles();\n\n  const [heartData, setHeartData] = useState([]);\n  const [rows, setRows] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [data, setData] = useState(JSON.parse(\"{}\"));\n  const [avgRate, setAvgRate] = useState(0);\n  const [lastRec, setLastRec] = useState(0);\n\n    useEffect(() => {\n        HeartRateService.getUsers('001072.b2df559565e4408586c5ff8852b01b65.0530').then(response => {\n            let arr = [];\n            Object.keys(response.data).forEach(function(key) {\n                let currDate = moment(response.data[key].date.substring(0, 19));\n                let HeartRate = {\n                    bpm: response.data[key].bpm,\n                    date: currDate,\n                    user_id: response.data[key].userid\n                }\n                arr.push(HeartRate);\n            });\n            let arrTable = arr.reverse();\n            setLastRec(arrTable[0].bpm);\n            setHeartData(arrTable);\n            let data = [];\n            for(let i = 0; i < arrTable.length; i++){\n              data.push(createData(i, arrTable[i].bpm, arrTable[i].date.format('lll')));\n            }\n            setRows(data);\n            let chartdata = \"{\";\n            let currAveRate = 0;\n            for(let i = 0; i < 10; i++){\n                currAveRate += arrTable[i].bpm;\n                chartdata += '\"' + arrTable[i].date.format() + '\": ' + arrTable[i].bpm;\n                if(i !== 9){\n                    chartdata += \",\";\n                }\n            }\n            chartdata += \"}\"\n            setData(JSON.parse(chartdata));\n            setAvgRate(Math.round(currAveRate / 10));\n        })\n    }, [])\n\n    const updateGraph = (newPage, rowsPerPageNew) => {\n        let chartdata = \"{\";\n        let currAveRate = 0;\n        for(let i = (newPage * rowsPerPage); i < ((rowsPerPage * newPage) + rowsPerPage); i++){\n            if(i > heartData.length - 1)\n            {\n                break; \n            }\n            currAveRate += heartData[i].bpm;\n            chartdata += '\"' + heartData[i].date.format() + '\": ' + heartData[i].bpm + ',';\n        }\n        chartdata = chartdata.substring(0, chartdata.length - 1)\n        chartdata += \"}\"\n        setData(JSON.parse(chartdata));\n        setAvgRate(Math.round(currAveRate / 10));\n    }\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n        let chartdata = \"{\";\n        let currAveRate = 0;\n        for(let i = (newPage * rowsPerPage); i < ((rowsPerPage * newPage) + rowsPerPage); i++){\n            if(i > heartData.length - 1)\n            {\n                break; \n            }\n            currAveRate += heartData[i].bpm;\n            chartdata += '\"' + heartData[i].date.format() + '\": ' + heartData[i].bpm + ',';\n        }\n        chartdata = chartdata.substring(0, chartdata.length - 1)\n        chartdata += \"}\"\n        setData(JSON.parse(chartdata));\n        setAvgRate(Math.round(currAveRate / 10));\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid>\n            <SideBar />\n        </Grid>\n        <Grid lg={10}>\n            <div className={classes.gridRight}>\n                <div className={classes.heading}>\n                    <div className={classes.rootHead}>\n                        <Grid container spacing={3}>\n                            <Grid className={classes.welcome} item xs={6}>\n                                Welcome, Bryce Schmisseur\n                                <div style={{fontSize: '20px'}}>This is your Dashboard</div>\n                            </Grid>\n                            <Grid className={classes.signIn} item xs={6}>\n                            <Button className={classes.button}>Select Dates</Button>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </div>\n                <Grid container>\n                    <Grid className={classes.gridRight} xs={6}>\n                        <Paper className={classes.rootTable}>\n                        <TableContainer className={classes.containerTable}>\n                            <Table stickyHeader aria-label=\"sticky table\">\n                            <TableHead>\n                                <TableRow>\n                                {columns.map((column) => (\n                                    <TableCell\n                                    key={column.id}\n                                    align={column.align}\n                                    style={{ minWidth: column.minWidth }}\n                                    >\n                                    {column.label}\n                                    </TableCell>\n                                ))}\n                                </TableRow>\n                            </TableHead>\n                            <TableBody id=\"currentRows\">\n                                {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                                return (\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.unNum}>\n                                    {columns.map((column) => {\n                                        const value = row[column.id];\n                                        return (\n                                        <TableCell key={column.id} align={column.align}>\n                                            {column.format && typeof value === 'number' ? column.format(value) : value}\n                                        </TableCell>\n                                        );\n                                    })}\n                                    </TableRow>\n                                );\n                                })}\n                            </TableBody>\n                            </Table>\n                        </TableContainer>\n                        <TablePagination\n                            rowsPerPageOptions={[10, 25, 100]}\n                            component=\"div\"\n                            count={rows.length}\n                            rowsPerPage={rowsPerPage}\n                            page={page}\n                            onChangePage={handleChangePage}\n                            onChangeRowsPerPage={handleChangeRowsPerPage}\n                        />\n                        </Paper>\n                    </Grid>\n                    <Grid className={classes.gridRight} xs={6}>\n                        <div>\n                            <Paper className={classes.rootGraph}>\n                                <div className={classes.chartTitle}>\n                                    BPM VS Time\n                                </div>\n                            <LineChart \n                                titel = \"Heart Rate\"\n                                ytitle= \"Beats per Minute (BPM)\"\n                                xtitle= \"Date Time\"\n                                data={data} />\n                            </Paper>\n                        </div>\n                        <Grid container>\n                            <Grid className={classes.gridRight} xs={6}>\n                                <Paper style={{padding: '15px'}}>\n                                    <div className={classes.titleRate}>Average Heart Rate</div>\n                                    <List>\n                                        <ListItem>\n                                            <ListItemIcon style={{fontSize: 'large'}}><FavoriteIcon /></ListItemIcon>\n                                            <ListItemText><Typography className={classes.listLabelRate}>{avgRate} BPM</Typography></ListItemText>\n                                        </ListItem>\n                                    </List>\n                                </Paper>\n                            </Grid>\n                            <Grid className={classes.gridRight} xs={6}>\n                                <Paper style={{padding: '15px'}}>\n                                    <div className={classes.titleRate}>Last Recorded</div>\n                                    <List>\n                                        <ListItem>\n                                            <ListItemIcon style={{fontSize: 'large'}}><FavoriteIcon /></ListItemIcon>\n                                            <ListItemText><Typography className={classes.listLabelRate}>{lastRec} BPM</Typography></ListItemText>\n                                        </ListItem>\n                                    </List>\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Footer />\n            </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}