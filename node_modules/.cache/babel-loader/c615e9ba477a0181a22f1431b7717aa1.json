{"ast":null,"code":"var _jsxFileName = \"/Users/bryceschmisseur/Desktop/IHeartRate/frontend/src/pages/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport SideBar from './../components/nav/SideBar';\nimport Table from '@material-ui/core/Table';\nimport Footer from './../components/nav/Footer';\nimport HeartRateService from './../services/HeartRateService';\nimport moment from 'moment';\nimport Paper from '@material-ui/core/Paper';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Chartkick, { LineChart } from 'react-chartkick';\nimport Highcharts from 'highcharts';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DateFnsUtils from '@date-io/date-fns';\nimport 'date-fns';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartkick.use(Highcharts);\nconst useStyles = makeStyles(theme => ({\n  gridRight: {\n    padding: '25px'\n  },\n  heading: {\n    marginBottom: '0px'\n  },\n  rootTable: {\n    width: '100%'\n  },\n  containerTable: {\n    maxHeight: 465,\n    minHeight: 465\n  },\n  rootHead: {\n    flexGrow: 1\n  },\n  welcome: {\n    textAlign: 'left',\n    fontWeight: '250',\n    fontSize: '28px'\n  },\n  signIn: {\n    textAlign: 'right',\n    fontWeight: '250'\n  },\n  button: {\n    background: 'linear-gradient(#ac1c13, #bf4342)',\n    color: 'white',\n    fontFamily: '-apple-system-body, BlinkMacSystemFont, sans-serif',\n    fontWeight: '300'\n  },\n  rootChart: {\n    width: '100%',\n    padding: '0px'\n  },\n  chartTitle: {\n    fontFamily: '-apple-system-body, BlinkMacSystemFont, sans-serif',\n    fontWeight: '300',\n    fontSize: '24px',\n    textAlign: 'center',\n    padding: '10px'\n  },\n  titleRate: {\n    fontFamily: '-apple-system-body, BlinkMacSystemFont, sans-serif',\n    fontWeight: '300',\n    fontSize: '18px',\n    textAlign: 'center',\n    padding: '0px'\n  },\n  listLabelRate: {\n    fontFamily: '-apple-system-body, BlinkMacSystemFont, sans-serif',\n    fontWeight: '100',\n    fontSize: '23px',\n    textAlign: 'left'\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 'auto',\n    width: 'fit-content'\n  },\n  formControl: {\n    marginTop: theme.spacing(2),\n    minWidth: 120\n  },\n  formControlLabel: {\n    marginTop: theme.spacing(1)\n  }\n}));\nconst columns = [{\n  id: 'bpm',\n  label: 'Beats per Minute',\n  align: 'center'\n}, {\n  id: 'date',\n  label: 'Date/Time Recorded',\n  minWidth: 170,\n  align: 'center',\n  format: value => moment(value).day()\n}];\n\nfunction createData(unNum, bpm, date) {\n  return {\n    unNum,\n    bpm,\n    date\n  };\n}\n\nexport default function Dashboard() {\n  _s();\n\n  const classes = useStyles();\n  const [datesButtonDis, setDatesButtonDis] = useState(false);\n  const [heartData, setHeartData] = useState([]);\n  const [rows, setRows] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [data, setData] = useState(JSON.parse(\"{}\"));\n  const [avgRate, setAvgRate] = useState(0);\n  const [lastRec, setLastRec] = useState(0);\n  const [open, setOpen] = useState(false);\n  const [selectedDateFrom, setSelectedDateFrom] = useState(new Date());\n  const [selectedDateTo, setSelectedDateTo] = useState(new Date());\n  useEffect(() => {\n    HeartRateService.getUsers('001072.b2df559565e4408586c5ff8852b01b65.0530').then(response => {\n      let arr = [];\n      Object.keys(response.data).forEach(function (key) {\n        let currDate = moment(response.data[key].date);\n        let HeartRate = {\n          bpm: response.data[key].bpm,\n          date: currDate,\n          user_id: response.data[key].userid\n        };\n        arr.push(HeartRate);\n      });\n      let arrTable = arr.reverse();\n\n      if (arrTable.length !== 0) {\n        setLastRec(arrTable[0].bpm);\n        setHeartData(arrTable);\n        let data = [];\n\n        for (let i = 0; i < arrTable.length; i++) {\n          data.push(createData(i, arrTable[i].bpm, arrTable[i].date.format('lll')));\n        }\n\n        setRows(data);\n        let chartdata = \"{\";\n        let currAveRate = 0;\n\n        for (let i = 9; i >= 0; i--) {\n          currAveRate += arrTable[i].bpm;\n          chartdata += '\"' + arrTable[i].date.format('MMM D, YYYY h:m.s') + '\": ' + arrTable[i].bpm;\n\n          if (i !== 0) {\n            chartdata += \",\";\n          }\n        }\n\n        console.log(\"Chart Data:\", chartdata);\n        chartdata += \"}\";\n        setData(JSON.parse(chartdata));\n        setAvgRate(Math.round(currAveRate / 10));\n      } else {\n        setDatesButtonDis(true);\n      }\n    });\n  }, []);\n\n  const updateGraph = (newPage, rowsPerPageNew, arr) => {\n    let chartdata = \"{\";\n    let currAveRate = 0;\n    let count = 0;\n\n    if (rowsPerPageNew !== -1) {\n      for (let i = newPage * rowsPerPageNew; i < rowsPerPageNew * newPage + rowsPerPageNew; i++) {\n        if (i > arr.length - 1) {\n          break;\n        }\n\n        currAveRate += arr[i].bpm;\n        chartdata += '\"' + arr[i].date.format('MMM D, YYYY h:m.s') + '\": ' + arr[i].bpm + ',';\n        count++;\n      }\n    } else {\n      for (let i = 0; i < arr.length; i++) {\n        currAveRate += arr[i].bpm;\n        chartdata += '\"' + arr[i].date.format('MMM D, YYYY h:m.s') + '\": ' + arr[i].bpm + ',';\n        count++;\n      }\n    }\n\n    chartdata = chartdata.substring(0, chartdata.length - 1);\n    chartdata += \"}\";\n    setData(JSON.parse(chartdata));\n    setAvgRate(Math.round(currAveRate / count));\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n    updateGraph(newPage, rowsPerPage, heartData);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n    updateGraph(0, +event.target.value, heartData);\n  };\n\n  const handleReset = () => {\n    setOpen(false);\n    let data = [];\n\n    for (let i = 0; i < heartData.length; i++) {\n      data.push(createData(i, heartData[i].bpm, heartData[i].date.format('lll')));\n    }\n\n    setRows(data);\n    let chartdata = \"{\";\n    let currAveRate = 0;\n\n    for (let i = 9; i >= 0; i--) {\n      currAveRate += heartData[i].bpm;\n      chartdata += '\"' + heartData[i].date.format('MMM D, YYYY h:m.s') + '\": ' + heartData[i].bpm;\n\n      if (i !== 0) {\n        chartdata += \",\";\n      }\n    }\n\n    chartdata += \"}\";\n    setData(JSON.parse(chartdata));\n    setAvgRate(Math.round(currAveRate / 10));\n    setPage(0);\n    setRowsPerPage(10);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    let dateFrom = moment(selectedDateFrom);\n    let dateTo = moment(selectedDateTo);\n\n    if (dateFrom.isAfter(dateTo) || dateTo.isBefore(dateFrom)) {\n      alert(\"The date start must not be after the end date or the end date must not be before the start date!\");\n    } else {\n      console.log(\"Hello\");\n      let tableData = [];\n      let chartData = \"{\";\n      let heartRates = 0;\n      let numRates = 0;\n\n      for (let i = 0; i < heartData.length; i++) {\n        let currDate = heartData[i].date;\n\n        if (currDate.isAfter(dateFrom) && currDate.isBefore(dateTo)) {\n          heartRates += heartData[i].bpm;\n          numRates++;\n          tableData.push(createData(i, heartData[i].bpm, heartData[i].date.format('lll')));\n          chartData += '\"' + heartData[i].date.format('MMM D, YYYY h:m.s') + '\": ' + heartData[i].bpm + ',';\n        }\n      }\n\n      if (numRates > 0) {\n        setAvgRate(Math.round(heartRates / numRates));\n        chartData = chartData.substring(0, chartData.length - 1);\n        chartData += \"}\";\n        setRows(tableData);\n        setData(JSON.parse(chartData));\n        setPage(0);\n        setRowsPerPage(-1);\n      } else {\n        console.log(\"No data found between those dates\");\n      }\n    }\n  };\n\n  const handleDateChangeFrom = date => {\n    setSelectedDateFrom(date);\n  };\n\n  const handleDateChangeTo = date => {\n    setSelectedDateTo(date);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        lg: 10,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.gridRight,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.heading,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.rootHead,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  className: classes.welcome,\n                  item: true,\n                  xs: 6,\n                  children: [\"Welcome, Bryce Schmisseur\", /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      fontSize: '20px'\n                    },\n                    children: \"This is your Dashboard\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 310,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  className: classes.signIn,\n                  item: true,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    disabled: datesButtonDis,\n                    className: classes.button,\n                    onClick: handleClickOpen,\n                    children: \"Select Dates\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              className: classes.gridRight,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Paper, {\n                className: classes.rootTable,\n                children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n                  className: classes.containerTable,\n                  children: /*#__PURE__*/_jsxDEV(Table, {\n                    stickyHeader: true,\n                    \"aria-label\": \"sticky table\",\n                    children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                      children: /*#__PURE__*/_jsxDEV(TableRow, {\n                        children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                          align: column.align,\n                          style: {\n                            minWidth: column.minWidth\n                          },\n                          children: column.label\n                        }, column.id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 326,\n                          columnNumber: 37\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 324,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 323,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                      id: \"currentRows\",\n                      children: (rowsPerPage > 0 ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : rows).map(row => {\n                        return /*#__PURE__*/_jsxDEV(TableRow, {\n                          hover: true,\n                          role: \"checkbox\",\n                          tabIndex: -1,\n                          children: columns.map(column => {\n                            const value = row[column.id];\n                            return /*#__PURE__*/_jsxDEV(TableCell, {\n                              align: column.align,\n                              children: column.format && typeof value === 'number' ? column.format(value) : value\n                            }, column.id, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 345,\n                              columnNumber: 41\n                            }, this);\n                          })\n                        }, row.unNum, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 341,\n                          columnNumber: 37\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 336,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n                  rowsPerPageOptions: [10, 25, 100, {\n                    label: 'All',\n                    value: -1\n                  }],\n                  component: \"div\",\n                  count: rows.length,\n                  rowsPerPage: rowsPerPage > 0 ? rowsPerPage : rows.length,\n                  page: page,\n                  onChangePage: handleChangePage,\n                  onChangeRowsPerPage: handleChangeRowsPerPage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              className: classes.gridRight,\n              xs: 6,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Paper, {\n                  className: classes.rootGraph,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: classes.chartTitle,\n                    children: \"BPM VS Time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n                    messages: {\n                      empty: \"No data\"\n                    },\n                    titel: \"Heart Rate\",\n                    ytitle: \"Beats per Minute (BPM)\",\n                    xtitle: \"Date Time\",\n                    data: data,\n                    discrete: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 373,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  className: classes.gridRight,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(Paper, {\n                    style: {\n                      padding: '15px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: classes.titleRate,\n                      children: \"Average Heart Rate\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 386,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(List, {\n                      children: /*#__PURE__*/_jsxDEV(ListItem, {\n                        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                          style: {\n                            fontSize: 'large'\n                          },\n                          children: /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 389,\n                            columnNumber: 87\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 389,\n                          columnNumber: 45\n                        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                          children: /*#__PURE__*/_jsxDEV(Typography, {\n                            className: classes.listLabelRate,\n                            children: [avgRate, \" BPM\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 390,\n                            columnNumber: 59\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 390,\n                          columnNumber: 45\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 388,\n                        columnNumber: 41\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 387,\n                      columnNumber: 37\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  className: classes.gridRight,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(Paper, {\n                    style: {\n                      padding: '15px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: classes.titleRate,\n                      children: \"Last Recorded\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 397,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(List, {\n                      children: /*#__PURE__*/_jsxDEV(ListItem, {\n                        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                          style: {\n                            fontSize: 'large'\n                          },\n                          children: /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 400,\n                            columnNumber: 87\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 400,\n                          columnNumber: 45\n                        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                          children: /*#__PURE__*/_jsxDEV(Typography, {\n                            className: classes.listLabelRate,\n                            children: [lastRec, \" BPM\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 401,\n                            columnNumber: 59\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 401,\n                          columnNumber: 45\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 399,\n                        columnNumber: 41\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 398,\n                      columnNumber: 37\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Dialog, {\n        open: open,\n        onClose: handleClose,\n        \"aria-labelledby\": \"max-width-dialog-title\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"max-width-dialog-title\",\n          children: \"Date Selector\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: \"Please select any two dates that you would like to pull information from:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: classes.form,\n            noValidate: true,\n            children: /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n              utils: DateFnsUtils,\n              children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n                children: \"Start Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                justify: \"space-around\",\n                children: [/*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                  margin: \"normal\",\n                  id: \"date-picker-dialog\",\n                  label: \"Date\",\n                  format: \"MM/dd/yyyy\",\n                  value: selectedDateFrom,\n                  onChange: handleDateChangeFrom,\n                  KeyboardButtonProps: {\n                    'aria-label': 'change date'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(KeyboardTimePicker, {\n                  margin: \"normal\",\n                  id: \"time-picker\",\n                  label: \"Time\",\n                  value: selectedDateFrom,\n                  onChange: handleDateChangeFrom,\n                  KeyboardButtonProps: {\n                    'aria-label': 'change time'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(DialogContentText, {\n                children: \"End Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                justify: \"space-around\",\n                children: [/*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                  margin: \"normal\",\n                  id: \"date-picker-dialog\",\n                  label: \"Date\",\n                  format: \"MM/dd/yyyy\",\n                  value: selectedDateTo,\n                  onChange: handleDateChangeTo,\n                  KeyboardButtonProps: {\n                    'aria-label': 'change date'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(KeyboardTimePicker, {\n                  margin: \"normal\",\n                  id: \"time-picker\",\n                  label: \"Time\",\n                  value: selectedDateTo,\n                  onChange: handleDateChangeTo,\n                  KeyboardButtonProps: {\n                    'aria-label': 'change time'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleReset,\n            color: \"primary\",\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            color: \"primary\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 298,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"Q6/b9Mb35huix2v4x3hSgeIZEhk=\", false, function () {\n  return [useStyles];\n});\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/bryceschmisseur/Desktop/IHeartRate/frontend/src/pages/Dashboard.js"],"names":["React","useState","useEffect","makeStyles","Grid","SideBar","Table","Footer","HeartRateService","moment","Paper","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Button","Chartkick","LineChart","Highcharts","List","ListItem","ListItemIcon","ListItemText","FavoriteIcon","Typography","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","use","useStyles","theme","gridRight","padding","heading","marginBottom","rootTable","width","containerTable","maxHeight","minHeight","rootHead","flexGrow","welcome","textAlign","fontWeight","fontSize","signIn","button","background","color","fontFamily","rootChart","chartTitle","titleRate","listLabelRate","form","display","flexDirection","margin","formControl","marginTop","spacing","minWidth","formControlLabel","columns","id","label","align","format","value","day","createData","unNum","bpm","date","Dashboard","classes","datesButtonDis","setDatesButtonDis","heartData","setHeartData","rows","setRows","page","setPage","rowsPerPage","setRowsPerPage","data","setData","JSON","parse","avgRate","setAvgRate","lastRec","setLastRec","open","setOpen","selectedDateFrom","setSelectedDateFrom","Date","selectedDateTo","setSelectedDateTo","getUsers","then","response","arr","Object","keys","forEach","key","currDate","HeartRate","user_id","userid","push","arrTable","reverse","length","i","chartdata","currAveRate","console","log","Math","round","updateGraph","newPage","rowsPerPageNew","count","substring","handleChangePage","event","handleChangeRowsPerPage","target","handleReset","handleClickOpen","handleClose","dateFrom","dateTo","isAfter","isBefore","alert","tableData","chartData","heartRates","numRates","handleDateChangeFrom","handleDateChangeTo","root","map","column","slice","row","rootGraph","empty"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport SideBar from './../components/nav/SideBar';\nimport Table from '@material-ui/core/Table';\nimport Footer from './../components/nav/Footer';\nimport HeartRateService from './../services/HeartRateService';\nimport moment from 'moment';\nimport Paper from '@material-ui/core/Paper';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Chartkick, { LineChart } from 'react-chartkick';\nimport Highcharts from 'highcharts';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DateFnsUtils from '@date-io/date-fns';\nimport 'date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nChartkick.use(Highcharts);\n\nconst useStyles = makeStyles((theme) => ({\n  gridRight: {\n      padding: '25px',\n  },\n  heading: {\n      marginBottom: '0px',\n  },\n  rootTable: {\n    width: '100%',\n\n  },\n  containerTable: {\n    maxHeight: 465,\n    minHeight: 465,\n  },\n  rootHead: {\n    flexGrow: 1,\n  },\n  welcome: {\n    textAlign: 'left',\n    fontWeight: '250',\n    fontSize: '28px'\n  },\n  signIn: {\n    textAlign: 'right',\n    fontWeight: '250',\n  },\n  button: {\n    background: 'linear-gradient(#ac1c13, #bf4342)',\n    color: 'white',\n    fontFamily: '-apple-system-body, BlinkMacSystemFont, sans-serif',\n    fontWeight: '300',\n  },\n  rootChart: {\n    width: '100%',\n    padding: '0px',\n  },\n  chartTitle: {\n      fontFamily: '-apple-system-body, BlinkMacSystemFont, sans-serif',\n      fontWeight: '300',\n      fontSize: '24px',\n      textAlign: 'center',\n      padding: '10px'\n  },\n  titleRate: {\n    fontFamily: '-apple-system-body, BlinkMacSystemFont, sans-serif',\n    fontWeight: '300',\n    fontSize: '18px',\n    textAlign: 'center',\n    padding: '0px'\n    },\n    listLabelRate: {\n        fontFamily: '-apple-system-body, BlinkMacSystemFont, sans-serif',\n        fontWeight: '100',\n        fontSize: '23px',\n        textAlign: 'left'\n    },\n    form: {\n        display: 'flex',\n        flexDirection: 'column',\n        margin: 'auto',\n        width: 'fit-content',\n    },\n    formControl: {\n        marginTop: theme.spacing(2),\n        minWidth: 120,\n    },\n    formControlLabel: {\n        marginTop: theme.spacing(1),\n    },\n}));\n\nconst columns = [\n    { \n      id: 'bpm', \n      label: 'Beats per Minute',\n      align: 'center' \n      },\n    {\n      id: 'date',\n      label: 'Date/Time Recorded',\n      minWidth: 170,\n      align: 'center',\n      format: (value) => moment(value).day(),\n    },\n  ];\n\nfunction createData(unNum, bpm, date) {\n    return {unNum, bpm, date };\n}\n\nexport default function Dashboard() {\n  const classes = useStyles();\n\n  const [datesButtonDis, setDatesButtonDis] = useState(false);\n  const [heartData, setHeartData] = useState([]);\n  const [rows, setRows] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [data, setData] = useState(JSON.parse(\"{}\"));\n  const [avgRate, setAvgRate] = useState(0);\n  const [lastRec, setLastRec] = useState(0);\n  const [open, setOpen] = useState(false);\n  const [selectedDateFrom, setSelectedDateFrom] = useState(new Date());\n  const [selectedDateTo, setSelectedDateTo] = useState(new Date());\n\n    useEffect(() => {\n        HeartRateService.getUsers('001072.b2df559565e4408586c5ff8852b01b65.0530').then(response => {\n            let arr = [];\n            Object.keys(response.data).forEach(function(key) {\n                let currDate = moment(response.data[key].date);\n                let HeartRate = {\n                    bpm: response.data[key].bpm,\n                    date: currDate,\n                    user_id: response.data[key].userid\n                }\n                arr.push(HeartRate);\n            });\n            let arrTable = arr.reverse();\n\n            if (arrTable.length !== 0 ){\n                setLastRec(arrTable[0].bpm);\n                setHeartData(arrTable);\n                let data = [];\n                for(let i = 0; i < arrTable.length; i++){\n                    data.push(createData(i, arrTable[i].bpm, arrTable[i].date.format('lll')));\n                }\n                setRows(data);\n            \n                let chartdata = \"{\";\n                let currAveRate = 0;\n                for(let i = 9; i >= 0; i--){\n                    currAveRate += arrTable[i].bpm;\n                    chartdata += '\"' + arrTable[i].date.format('MMM D, YYYY h:m.s') + '\": ' + arrTable[i].bpm;\n                    if(i !== 0){\n                        chartdata += \",\";\n                    }\n                }\n                console.log(\"Chart Data:\", chartdata);\n                chartdata += \"}\"\n                setData(JSON.parse(chartdata));\n                setAvgRate(Math.round(currAveRate / 10));\n            } else {\n                setDatesButtonDis(true);\n            }\n        })\n    }, [])\n\n    const updateGraph = (newPage, rowsPerPageNew, arr) => {\n        let chartdata = \"{\";\n        let currAveRate = 0;\n        let count = 0;\n        if(rowsPerPageNew !== -1)\n        {\n            for(let i = (newPage * rowsPerPageNew); i < ((rowsPerPageNew * newPage) + rowsPerPageNew); i++){\n                if(i > arr.length - 1)\n                {\n                    break; \n                }\n                currAveRate += arr[i].bpm;\n                chartdata += '\"' + arr[i].date.format('MMM D, YYYY h:m.s') + '\": ' + arr[i].bpm + ',';\n                count++;\n            }\n        } else {\n            for(let i = 0; i < arr.length; i++){\n                currAveRate += arr[i].bpm;\n                chartdata += '\"' + arr[i].date.format('MMM D, YYYY h:m.s') + '\": ' + arr[i].bpm + ',';\n                count++;\n            }\n        }\n        chartdata = chartdata.substring(0, chartdata.length - 1)\n        chartdata += \"}\"\n        setData(JSON.parse(chartdata));\n        setAvgRate(Math.round(currAveRate / count));\n    }\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n        updateGraph(newPage, rowsPerPage, heartData);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n        updateGraph(0, +event.target.value, heartData);\n    };\n\n    const handleReset = () => {\n        setOpen(false);\n        let data = [];\n        for(let i = 0; i < heartData.length; i++){\n            data.push(createData(i, heartData[i].bpm, heartData[i].date.format('lll')));\n        }\n        setRows(data);\n        let chartdata = \"{\";\n        let currAveRate = 0;\n        for(let i = 9; i >= 0; i--){\n            currAveRate += heartData[i].bpm;\n            chartdata += '\"' + heartData[i].date.format('MMM D, YYYY h:m.s') + '\": ' + heartData[i].bpm;\n            if(i !== 0){\n                chartdata += \",\";\n            }\n        }\n        chartdata += \"}\"\n        setData(JSON.parse(chartdata));\n        setAvgRate(Math.round(currAveRate / 10));\n        setPage(0);\n        setRowsPerPage(10);\n    }\n\n    const handleClickOpen = () => {\n        setOpen(true);\n      };\n    \n      const handleClose = () => {\n        setOpen(false);\n        let dateFrom = moment(selectedDateFrom);\n        let dateTo = moment(selectedDateTo);\n        if(dateFrom.isAfter(dateTo) || dateTo.isBefore(dateFrom)){\n            alert(\"The date start must not be after the end date or the end date must not be before the start date!\");\n        } else {\n            console.log(\"Hello\")\n            let tableData = [];\n            let chartData = \"{\";\n            let heartRates = 0;\n            let numRates = 0;\n            for(let i = 0; i < heartData.length; i++){\n                let currDate = heartData[i].date;\n                if(currDate.isAfter(dateFrom) && currDate.isBefore(dateTo)){\n                    heartRates += heartData[i].bpm;\n                    numRates++;\n                    tableData.push(createData(i, heartData[i].bpm, heartData[i].date.format('lll')));\n                    chartData += '\"' + heartData[i].date.format('MMM D, YYYY h:m.s') + '\": ' + heartData[i].bpm + ',';\n                }\n            }\n            if (numRates > 0) {\n                setAvgRate(Math.round(heartRates / numRates))\n                chartData = chartData.substring(0, chartData.length - 1)\n                chartData += \"}\"\n                setRows(tableData);\n                setData(JSON.parse(chartData));\n                setPage(0);\n                setRowsPerPage(-1);\n            } else {\n                console.log(\"No data found between those dates\");\n            }\n        }\n      };\n\n    const handleDateChangeFrom = (date) => {\n        setSelectedDateFrom(date);\n    };\n\n    const handleDateChangeTo = (date) => {\n        setSelectedDateTo(date);\n    };\n\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid>\n            <SideBar />\n        </Grid>\n        <Grid lg={10} >\n            <div className={classes.gridRight}>\n                <div className={classes.heading}>\n                    <div className={classes.rootHead}>\n                        <Grid container spacing={3}>\n                            <Grid className={classes.welcome} item xs={6}>\n                                Welcome, Bryce Schmisseur\n                                <div style={{fontSize: '20px'}}>This is your Dashboard</div>\n                            </Grid>\n                            <Grid className={classes.signIn} item xs={6}>\n                            <Button disabled={datesButtonDis} className={classes.button} onClick={handleClickOpen}>Select Dates</Button>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </div>\n                <Grid container>\n                    <Grid className={classes.gridRight} xs={6}>\n                        <Paper className={classes.rootTable}>\n                        <TableContainer className={classes.containerTable}>\n                            <Table stickyHeader aria-label=\"sticky table\">\n                            <TableHead>\n                                <TableRow>\n                                {columns.map((column) => (\n                                    <TableCell\n                                    key={column.id}\n                                    align={column.align}\n                                    style={{ minWidth: column.minWidth }}\n                                    >\n                                    {column.label}\n                                    </TableCell>\n                                ))}\n                                </TableRow>\n                            </TableHead>\n                            <TableBody id=\"currentRows\">\n                                {(rowsPerPage > 0\n                                    ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                    : rows).map((row) => {\n                                return (\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.unNum}>\n                                    {columns.map((column) => {\n                                        const value = row[column.id];\n                                        return (\n                                        <TableCell key={column.id} align={column.align}>\n                                            {column.format && typeof value === 'number' ? column.format(value) : value}\n                                        </TableCell>\n                                        );\n                                    })}\n                                    </TableRow>\n                                );\n                                })}\n                            </TableBody>\n                            </Table>\n                        </TableContainer>\n                        <TablePagination\n                            rowsPerPageOptions={[10, 25, 100, { label: 'All', value: -1 }]}\n                            component=\"div\"\n                            count={rows.length}\n                            rowsPerPage={rowsPerPage > 0 ? rowsPerPage : rows.length}\n                            page={page}\n                            onChangePage={handleChangePage}\n                            onChangeRowsPerPage={handleChangeRowsPerPage}\n                        />\n                        </Paper>\n                    </Grid>\n                    <Grid className={classes.gridRight} xs={6}>\n                        <div>\n                            <Paper className={classes.rootGraph}>\n                                <div className={classes.chartTitle}>\n                                    BPM VS Time\n                                </div>\n                            <LineChart \n                                messages={{empty: \"No data\"}}\n                                titel = \"Heart Rate\"\n                                ytitle= \"Beats per Minute (BPM)\"\n                                xtitle= \"Date Time\"\n                                data={data} \n                                discrete = {true}\n                                />\n                            </Paper>\n                        </div>\n                        <Grid container>\n                            <Grid className={classes.gridRight} xs={6}>\n                                <Paper style={{padding: '15px'}}>\n                                    <div className={classes.titleRate}>Average Heart Rate</div>\n                                    <List>\n                                        <ListItem>\n                                            <ListItemIcon style={{fontSize: 'large'}}><FavoriteIcon /></ListItemIcon>\n                                            <ListItemText><Typography className={classes.listLabelRate}>{avgRate} BPM</Typography></ListItemText>\n                                        </ListItem>\n                                    </List>\n                                </Paper>\n                            </Grid>\n                            <Grid className={classes.gridRight} xs={6}>\n                                <Paper style={{padding: '15px'}}>\n                                    <div className={classes.titleRate}>Last Recorded</div>\n                                    <List>\n                                        <ListItem>\n                                            <ListItemIcon style={{fontSize: 'large'}}><FavoriteIcon /></ListItemIcon>\n                                            <ListItemText><Typography className={classes.listLabelRate}>{lastRec} BPM</Typography></ListItemText>\n                                        </ListItem>\n                                    </List>\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Footer />\n            </div>\n        </Grid>\n      </Grid>\n      <React.Fragment>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">Date Selector</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please select any two dates that you would like to pull information from:\n          </DialogContentText>\n          <form className={classes.form} noValidate>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DialogContentText>\n                    Start Date:\n                </DialogContentText>\n                <Grid container justify=\"space-around\">\n                    <KeyboardDatePicker\n                        margin=\"normal\"\n                        id=\"date-picker-dialog\"\n                        label=\"Date\"\n                        format=\"MM/dd/yyyy\"\n                        value={selectedDateFrom}\n                        onChange={handleDateChangeFrom}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                    /> \n                    <KeyboardTimePicker\n                        margin=\"normal\"\n                        id=\"time-picker\"\n                        label=\"Time\"\n                        value={selectedDateFrom}\n                        onChange={handleDateChangeFrom}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change time',\n                        }}\n                    />\n                </Grid>\n                <DialogContentText>\n                    End Date:\n                </DialogContentText>\n                <Grid container justify=\"space-around\">\n                    <KeyboardDatePicker\n                        margin=\"normal\"\n                        id=\"date-picker-dialog\"\n                        label=\"Date\"\n                        format=\"MM/dd/yyyy\"\n                        value={selectedDateTo}\n                        onChange={handleDateChangeTo}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                    /> \n                    <KeyboardTimePicker\n                        margin=\"normal\"\n                        id=\"time-picker\"\n                        label=\"Time\"\n                        value={selectedDateTo}\n                        onChange={handleDateChangeTo}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change time',\n                        }}\n                    />\n                </Grid>\n            </MuiPickersUtilsProvider>\n          </form>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={handleReset} color=\"primary\">\n                Reset\n            </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            <b>Select</b>\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}