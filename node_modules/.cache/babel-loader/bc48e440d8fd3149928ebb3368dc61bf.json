{"ast":null,"code":"var _jsxFileName = \"/Users/bryceschmisseur/Desktop/IHeartRate/frontend/src/pages/Test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport SideBar from './../components/nav/SideBar';\nimport Table from './../components/dashboard/Table';\nimport Heading from './../components/dashboard/Heading';\nimport Graph from './../components/dashboard/Graph';\nimport Average from './../components/dashboard/Average';\nimport LastRecored from './../components/dashboard/Live';\nimport Footer from './../components/nav/Footer';\nimport HeartRateService from './../services/HeartRateService';\nimport moment from 'moment';\nimport Paper from '@material-ui/core/Paper';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  gridRight: {\n    padding: '25px'\n  },\n  heading: {\n    marginBottom: '0px'\n  },\n  rootTable: {\n    width: '100%'\n  },\n  containerTable: {\n    maxHeight: 465,\n    minHeight: 465\n  }\n}));\nconst columns = [{\n  id: 'bpm',\n  label: 'Beats per Minute',\n  align: 'center'\n}, {\n  id: 'date',\n  label: 'Date/Time Recorded',\n  minWidth: 170,\n  align: 'center',\n  format: value => value.toLocaleString('en-US')\n}];\n\nfunction createData(bpm, date) {\n  return {\n    bpm,\n    date\n  };\n}\n\nexport default function Dashboard() {\n  _s();\n\n  const classes = useStyles();\n  const [rows, setRows] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  useEffect(() => {\n    HeartRateService.getUsers('001072.b2df559565e4408586c5ff8852b01b65.0530').then(response => {\n      let arr = [];\n      Object.keys(response.data).forEach(function (key) {\n        let currDate = moment(response.data[key].date.substring(0, 19));\n        let HeartRate = {\n          bpm: response.data[key].bpm,\n          date: currDate,\n          user_id: response.data[key].userid\n        };\n        arr.push(HeartRate);\n      });\n      let arrTable = arr.reverse();\n      let data = [];\n\n      for (let i = 0; i < arrTable.length; i++) {\n        data.push(createData(arrTable[i].bpm, arrTable[i].date.toLocaleString()));\n      }\n\n      setRows(data);\n    });\n  }, []);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        lg: 10,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.gridRight,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.heading,\n            children: /*#__PURE__*/_jsxDEV(Heading, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              className: classes.gridRight,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Paper, {\n                className: classes.rootTable,\n                children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n                  className: classes.containerTable,\n                  children: /*#__PURE__*/_jsxDEV(Table, {\n                    stickyHeader: true,\n                    \"aria-label\": \"sticky table\",\n                    children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                      children: /*#__PURE__*/_jsxDEV(TableRow, {\n                        children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                          align: column.align,\n                          style: {\n                            minWidth: column.minWidth\n                          },\n                          children: column.label\n                        }, column.id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 113,\n                          columnNumber: 37\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 111,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                      children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n                        return /*#__PURE__*/_jsxDEV(TableRow, {\n                          hover: true,\n                          role: \"checkbox\",\n                          tabIndex: -1,\n                          children: columns.map(column => {\n                            const value = row[column.id];\n                            return /*#__PURE__*/_jsxDEV(TableCell, {\n                              align: column.align,\n                              children: column.format && typeof value === 'number' ? column.format(value) : value\n                            }, column.id, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 130,\n                              columnNumber: 41\n                            }, this);\n                          })\n                        }, row.code, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 126,\n                          columnNumber: 37\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n                  rowsPerPageOptions: [10, 25, 100],\n                  component: \"div\",\n                  count: rows.length,\n                  rowsPerPage: rowsPerPage,\n                  page: page,\n                  onChangePage: handleChangePage,\n                  onChangeRowsPerPage: handleChangeRowsPerPage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              className: classes.gridRight,\n              xs: 6,\n              children: [/*#__PURE__*/_jsxDEV(Graph, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  className: classes.gridRight,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(Average, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  className: classes.gridRight,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(LastRecored, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"8ivSL8GvZRkNYy4bmBivp0oHRnE=\", false, function () {\n  return [useStyles];\n});\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/bryceschmisseur/Desktop/IHeartRate/frontend/src/pages/Test.js"],"names":["React","useState","useEffect","makeStyles","Grid","SideBar","Table","Heading","Graph","Average","LastRecored","Footer","HeartRateService","moment","Paper","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","useStyles","theme","gridRight","padding","heading","marginBottom","rootTable","width","containerTable","maxHeight","minHeight","columns","id","label","align","minWidth","format","value","toLocaleString","createData","bpm","date","Dashboard","classes","rows","setRows","page","setPage","rowsPerPage","setRowsPerPage","getUsers","then","response","arr","Object","keys","data","forEach","key","currDate","substring","HeartRate","user_id","userid","push","arrTable","reverse","i","length","handleChangePage","event","newPage","handleChangeRowsPerPage","target","root","map","column","slice","row","code"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport SideBar from './../components/nav/SideBar';\nimport Table from './../components/dashboard/Table';\nimport Heading from './../components/dashboard/Heading';\nimport Graph from './../components/dashboard/Graph';\nimport Average from './../components/dashboard/Average';\nimport LastRecored from './../components/dashboard/Live';\nimport Footer from './../components/nav/Footer';\nimport HeartRateService from './../services/HeartRateService';\nimport moment from 'moment';\nimport Paper from '@material-ui/core/Paper';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst useStyles = makeStyles((theme) => ({\n  gridRight: {\n      padding: '25px',\n  },\n  heading: {\n      marginBottom: '0px',\n  },\n  rootTable: {\n    width: '100%',\n\n  },\n  containerTable: {\n    maxHeight: 465,\n    minHeight: 465,\n  },\n}));\n\nconst columns = [\n    { \n      id: 'bpm', \n      label: 'Beats per Minute',\n      align: 'center' \n      },\n    {\n      id: 'date',\n      label: 'Date/Time Recorded',\n      minWidth: 170,\n      align: 'center',\n      format: (value) => value.toLocaleString('en-US'),\n    },\n  ];\n\nfunction createData(bpm, date) {\n    return { bpm, date };\n}\n\nexport default function Dashboard() {\n  const classes = useStyles();\n\n  const [rows, setRows] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    useEffect(() => {\n        HeartRateService.getUsers('001072.b2df559565e4408586c5ff8852b01b65.0530').then(response => {\n            let arr = [];\n            Object.keys(response.data).forEach(function(key) {\n                let currDate = moment(response.data[key].date.substring(0, 19))\n                let HeartRate = {\n                    bpm: response.data[key].bpm,\n                    date: currDate,\n                    user_id: response.data[key].userid\n                }\n                arr.push(HeartRate);\n            });\n            let arrTable = arr.reverse();\n            let data = [];\n            for(let i = 0; i < arrTable.length; i++){\n              data.push(createData(arrTable[i].bpm, arrTable[i].date.toLocaleString()));\n            }\n            setRows(data);\n        })\n    }, [])\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n        };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid>\n            <SideBar />\n        </Grid>\n        <Grid lg={10}>\n            <div className={classes.gridRight}>\n                <div className={classes.heading}>\n                    <Heading/>\n                </div>\n                <Grid container>\n                    <Grid className={classes.gridRight} xs={6}>\n                        <Paper className={classes.rootTable}>\n                        <TableContainer className={classes.containerTable}>\n                            <Table stickyHeader aria-label=\"sticky table\">\n                            <TableHead>\n                                <TableRow>\n                                {columns.map((column) => (\n                                    <TableCell\n                                    key={column.id}\n                                    align={column.align}\n                                    style={{ minWidth: column.minWidth }}\n                                    >\n                                    {column.label}\n                                    </TableCell>\n                                ))}\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                                return (\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                                    {columns.map((column) => {\n                                        const value = row[column.id];\n                                        return (\n                                        <TableCell key={column.id} align={column.align}>\n                                            {column.format && typeof value === 'number' ? column.format(value) : value}\n                                        </TableCell>\n                                        );\n                                    })}\n                                    </TableRow>\n                                );\n                                })}\n                            </TableBody>\n                            </Table>\n                        </TableContainer>\n                        <TablePagination\n                            rowsPerPageOptions={[10, 25, 100]}\n                            component=\"div\"\n                            count={rows.length}\n                            rowsPerPage={rowsPerPage}\n                            page={page}\n                            onChangePage={handleChangePage}\n                            onChangeRowsPerPage={handleChangeRowsPerPage}\n                        />\n                        </Paper>\n                    </Grid>\n                    <Grid className={classes.gridRight} xs={6}>\n                        <Graph />\n                        <Grid container>\n                            <Grid className={classes.gridRight} xs={6}>\n                                <Average />\n                            </Grid>\n                            <Grid className={classes.gridRight} xs={6}>\n                                <LastRecored /> \n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Footer />\n            </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}