{"ast":null,"code":"var _jsxFileName = \"/Users/bryceschmisseur/Desktop/IHeartRate/frontend/src/components/dashboard/Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  id: 'bpm',\n  label: 'Beats per Minute',\n  align: 'center'\n}, {\n  id: 'date',\n  label: 'Date/Time Recorded',\n  minWidth: 170,\n  align: 'center',\n  format: value => value.toLocaleString('en-US')\n}];\n\nfunction createData(bpm, date) {\n  return {\n    bpm,\n    date\n  };\n}\n\nconst rows = [createData(61, '2021-02-07 14:27:33'), createData(62, '2021-02-07 14:27:34'), createData(57, '2021-02-07 14:27:35'), createData(61, '2021-02-07 14:27:36'), createData(63, '2021-02-07 14:27:37'), createData(64, '2021-02-07 14:27:38'), createData(68, '2021-02-07 14:27:39'), createData(74, '2021-02-07 14:27:40'), createData(66, '2021-02-07 14:27:41'), createData(66, '2021-02-07 14:27:42'), createData(65, '2021-02-07 14:27:43'), createData(64, '2021-02-07 14:27:44')];\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  container: {\n    maxHeight: 465,\n    minHeight: 465\n  }\n});\nexport default function StickyHeadTable(props) {\n  _s();\n\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [rateList, setRateList] = React.useState([]);\n  useEffect(() => {\n    return props.rateList;\n  }, []);\n  console.log(rateList);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: column.align,\n              style: {\n                minWidth: column.minWidth\n              },\n              children: column.label\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: columns.map(column => {\n                const value = row[column.id];\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: column.align,\n                  children: column.format && typeof value === 'number' ? column.format(value) : value\n                }, column.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 23\n                }, this);\n              })\n            }, row.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [10, 25, 100],\n      component: \"div\",\n      count: rows.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onChangePage: handleChangePage,\n      onChangeRowsPerPage: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StickyHeadTable, \"Jhs8lOwzYq7xP1vL6kxd4OfCzTA=\", false, function () {\n  return [useStyles];\n});\n\n_c = StickyHeadTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"StickyHeadTable\");","map":{"version":3,"sources":["/Users/bryceschmisseur/Desktop/IHeartRate/frontend/src/components/dashboard/Table.js"],"names":["React","useEffect","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","columns","id","label","align","minWidth","format","value","toLocaleString","createData","bpm","date","rows","useStyles","root","width","container","maxHeight","minHeight","StickyHeadTable","props","classes","page","setPage","useState","rowsPerPage","setRowsPerPage","rateList","setRateList","console","log","handleChangePage","event","newPage","handleChangeRowsPerPage","target","map","column","slice","row","code","length"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst columns = [\n  { \n    id: 'bpm', \n    label: 'Beats per Minute',\n    align: 'center' \n    },\n  {\n    id: 'date',\n    label: 'Date/Time Recorded',\n    minWidth: 170,\n    align: 'center',\n    format: (value) => value.toLocaleString('en-US'),\n  },\n];\n\nfunction createData(bpm, date) {\n  return { bpm, date };\n}\n\nconst rows = [\n  createData(61, '2021-02-07 14:27:33'),\n  createData(62, '2021-02-07 14:27:34'),\n  createData(57, '2021-02-07 14:27:35'),\n  createData(61, '2021-02-07 14:27:36'),\n  createData(63, '2021-02-07 14:27:37'),\n  createData(64, '2021-02-07 14:27:38'),\n  createData(68, '2021-02-07 14:27:39'),\n  createData(74, '2021-02-07 14:27:40'),\n  createData(66, '2021-02-07 14:27:41'),\n  createData(66, '2021-02-07 14:27:42'),\n  createData(65, '2021-02-07 14:27:43'),\n  createData(64, '2021-02-07 14:27:44'),\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n\n  },\n  container: {\n    maxHeight: 465,\n    minHeight: 465,\n  },\n});\n\nexport default function StickyHeadTable(props) {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [rateList, setRateList] = React.useState([]);\n\n  useEffect(() => {\n    return props.rateList;\n  }, [])\n\n  console.log(rateList);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                  {columns.map((column) => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell key={column.id} align={column.align}>\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}"]},"metadata":{},"sourceType":"module"}