{"version":3,"sources":["pages/Home.js","photos/bryce.png","components/nav/SideBar.js","components/nav/Footer.js","services/HeartRateService.js","pages/Dashboard.js","App.js","theme/theme.js","index.js"],"names":["Home","drawerWidth","useStyles","makeStyles","theme","root","display","appBar","width","marginLeft","drawer","flexShrink","textAlign","fontWeight","fontSize","drawerPaper","background","toolbar","mixins","content","flexGrow","padding","spacing","avatar","height","marginTop","marginBottom","alignSelf","listLabel","color","fontFamily","PermanentDrawerLeft","classes","className","CssBaseline","Drawer","variant","paper","anchor","style","Avatar","alt","src","picture","Divider","backgroundColor","List","ListItem","Button","ListItemIcon","ListItemText","Typography","iconsBoxRoot","breakpoints","down","copy","order","Footer","props","Container","maxWidth","Box","flexWrap","alignItems","component","gutterBottom","ml","IconButton","aria-label","a","axiosConfig","headers","axios","get","response","data","userid","Chartkick","use","Highcharts","gridRight","heading","rootTable","containerTable","maxHeight","minHeight","rootHead","welcome","signIn","button","rootChart","chartTitle","titleRate","listLabelRate","form","flexDirection","margin","formControl","minWidth","formControlLabel","columns","id","label","align","format","value","moment","day","createData","unNum","bpm","date","Dashboard","useState","heartData","setHeartData","rows","setRows","page","setPage","rowsPerPage","setRowsPerPage","JSON","parse","setData","avgRate","setAvgRate","lastRec","setLastRec","open","setOpen","Date","selectedDateFrom","setSelectedDateFrom","selectedDateTo","setSelectedDateTo","useEffect","HeartRateService","getUsers","then","arr","Object","keys","forEach","key","currDate","substring","HeartRate","user_id","push","arrTable","reverse","i","length","chartdata","currAveRate","Math","round","updateGraph","newPage","rowsPerPageNew","count","handleClose","dateFrom","dateTo","isAfter","isBefore","alert","console","log","tableData","chartData","heartRates","numRates","handleDateChangeFrom","handleDateChangeTo","Grid","container","lg","item","xs","onClick","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","TableBody","slice","row","hover","role","tabIndex","TablePagination","rowsPerPageOptions","onChangePage","event","onChangeRowsPerPage","target","rootGraph","messages","empty","titel","ytitle","xtitle","Fragment","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","noValidate","utils","DateFnsUtils","justify","onChange","KeyboardButtonProps","DialogActions","App","exact","path","createMuiTheme","typography","ReactDOM","render","ThemeProvider","Theme","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67c52f8c.chunk.js","sourcesContent":["import React from 'react'\n\nconst Home = () => {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n\nexport default Home\n","export default __webpack_public_path__ + \"static/media/bryce.6f93ee6b.png\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TableChartIcon from '@material-ui/icons/TableChart';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport picture from '../../photos/bryce.png';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    textAlign: 'center',\n    fontWeight: '200',\n    fontSize: '32px',\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    background: 'linear-gradient(#ac1c13, #bf4342)',\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  avatar: {\n      \n      width: '75px',\n      height: '75px',\n      marginTop: '25px',\n      marginBottom: '25px',\n      fontSize: '25px',\n      alignSelf: 'center'\n  },\n  listLabel: {\n    color: 'white',\n    fontFamily: '-apple-system-body, BlinkMacSystemFont, sans-serif',\n    fontWeight: '300',\n    textAlign: 'left'\n  }\n}));\n\nexport default function PermanentDrawerLeft() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        anchor=\"left\"\n      >\n        <div className={classes.toolbar} />\n        <div style={{color: 'white'}}>Welcome to iHeartRate!</div>\n        <Avatar className={classes.avatar} alt=\"Bryce Schmisseur\" src={picture}>BS</Avatar>\n        <div style={{color: 'white', fontSize: '20px', marginBottom: '15px'}}>Bryce Schmisseur</div>\n        <Divider style={{backgroundColor: 'rgba(255, 255, 255, 0.2)', width: '90%', alignSelf: 'center'}}/>\n        <List>\n            <ListItem>\n              <Button style={{width: '100%'}}>\n                  <ListItemIcon className={classes.listLabel}><TableChartIcon /></ListItemIcon>\n                  <ListItemText><Typography className={classes.listLabel}>Table</Typography></ListItemText>\n              </Button>\n            </ListItem>\n            <ListItem>\n              <Button style={{width: '100%'}}>\n                  <ListItemIcon className={classes.listLabel}><TimelineIcon /></ListItemIcon>\n                  <ListItemText><Typography className={classes.listLabel}>Chart</Typography></ListItemText>\n              </Button>\n            </ListItem>\n            <ListItem>\n              <Button style={{width: '100%'}}>\n                  <ListItemIcon className={classes.listLabel}><FavoriteIcon /></ListItemIcon>\n                  <ListItemText><Typography className={classes.listLabel}>Live</Typography></ListItemText>\n              </Button>\n            </ListItem>\n        </List>\n      </Drawer>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '30px'\n  },\n  iconsBoxRoot: {\n    [theme.breakpoints.down('md')]: {\n      width: '100%',\n    }\n  },\n  copy: {\n    [theme.breakpoints.down('md')]: {\n      width: '100%',\n      order: 12,\n    }\n  }\n}));\n\nexport default function Footer(props) {\n  const classes = useStyles();\n\n  const content = {\n    'copy': '© 2020 iHeart Rate. All rights reserved.',\n    ...props.content\n  };\n\n  return (\n    <footer className={classes.root}>\n      <Container maxWidth=\"lg\">\n        <Box display=\"flex\" flexWrap=\"wrap\" alignItems=\"center\">\n          <Typography color=\"textSecondary\" component=\"p\" gutterBottom={false} className={classes.copy}>{content['copy']}</Typography>\n          <Box ml=\"auto\" className={classes.iconsBoxRoot}>\n            <IconButton color=\"textSecondary\" aria-label=\"Twitter\">\n              <TwitterIcon />\n            </IconButton>\n            <IconButton color=\"textSecondary\" aria-label=\"Facebook\">\n              <FacebookIcon />\n            </IconButton>\n            <IconButton color=\"textSecondary\" aria-label=\"Instagram\">\n              <InstagramIcon />\n            </IconButton>\n            <IconButton color=\"textSecondary\" aria-label=\"LinkedIn\">\n              <LinkedInIcon />\n            </IconButton>\n          </Box>\n        </Box>\n      </Container>\n    </footer>\n  );\n}","import axios from 'axios';\n\nclass HeartRateService {\n\n    async getAll(){\n        const axiosConfig = {\n            headers: {\n                'Content-Type': 'application/json;charset=UTF-8',\n                \"Access-Control-Allow-Origin\" : \"*\",\n                \"Access-Control-Allow-Methods\" : \"*\",\n                \"Access-Control-Allow-Headers\": \"*\"\n            }\n        };\n\n        const response = await axios.get(\"http://localhost:3001/api/heartrate\", axiosConfig);\n        return response.data;\n    }\n\n    async getUsers(userid){\n        const axiosConfig = {\n            headers: {\n                'Content-Type': 'application/json;charset=UTF-8',\n                \"Access-Control-Allow-Origin\" : \"*\",\n                \"Access-Control-Allow-Methods\" : \"*\",\n                \"Access-Control-Allow-Headers\": \"*\"\n            }\n        };\n\n        const response = await axios.get(\"http://localhost:3001/api/heartrate/\" + userid, axiosConfig);\n        return response;\n    }\n}\n\nexport default new HeartRateService();","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport SideBar from './../components/nav/SideBar';\nimport Table from '@material-ui/core/Table';\nimport Footer from './../components/nav/Footer';\nimport HeartRateService from './../services/HeartRateService';\nimport moment from 'moment';\nimport Paper from '@material-ui/core/Paper';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Chartkick, { LineChart } from 'react-chartkick';\nimport Highcharts from 'highcharts';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DateFnsUtils from '@date-io/date-fns';\nimport 'date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nChartkick.use(Highcharts);\n\nconst useStyles = makeStyles((theme) => ({\n  gridRight: {\n      padding: '25px',\n  },\n  heading: {\n      marginBottom: '0px',\n  },\n  rootTable: {\n    width: '100%',\n\n  },\n  containerTable: {\n    maxHeight: 465,\n    minHeight: 465,\n  },\n  rootHead: {\n    flexGrow: 1,\n  },\n  welcome: {\n    textAlign: 'left',\n    fontWeight: '250',\n    fontSize: '28px'\n  },\n  signIn: {\n    textAlign: 'right',\n    fontWeight: '250',\n  },\n  button: {\n    background: 'linear-gradient(#ac1c13, #bf4342)',\n    color: 'white',\n    fontFamily: '-apple-system-body, BlinkMacSystemFont, sans-serif',\n    fontWeight: '300',\n  },\n  rootChart: {\n    width: '100%',\n    padding: '0px',\n  },\n  chartTitle: {\n      fontFamily: '-apple-system-body, BlinkMacSystemFont, sans-serif',\n      fontWeight: '300',\n      fontSize: '24px',\n      textAlign: 'center',\n      padding: '10px'\n  },\n  titleRate: {\n    fontFamily: '-apple-system-body, BlinkMacSystemFont, sans-serif',\n    fontWeight: '300',\n    fontSize: '18px',\n    textAlign: 'center',\n    padding: '0px'\n    },\n    listLabelRate: {\n        fontFamily: '-apple-system-body, BlinkMacSystemFont, sans-serif',\n        fontWeight: '100',\n        fontSize: '23px',\n        textAlign: 'left'\n    },\n    form: {\n        display: 'flex',\n        flexDirection: 'column',\n        margin: 'auto',\n        width: 'fit-content',\n    },\n    formControl: {\n        marginTop: theme.spacing(2),\n        minWidth: 120,\n    },\n    formControlLabel: {\n        marginTop: theme.spacing(1),\n    },\n}));\n\nconst columns = [\n    { \n      id: 'bpm', \n      label: 'Beats per Minute',\n      align: 'center' \n      },\n    {\n      id: 'date',\n      label: 'Date/Time Recorded',\n      minWidth: 170,\n      align: 'center',\n      format: (value) => moment(value).day(),\n    },\n  ];\n\nfunction createData(unNum, bpm, date) {\n    return {unNum, bpm, date };\n}\n\nexport default function Dashboard() {\n  const classes = useStyles();\n\n  const [heartData, setHeartData] = useState([]);\n  const [rows, setRows] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [data, setData] = useState(JSON.parse(\"{}\"));\n  const [avgRate, setAvgRate] = useState(0);\n  const [lastRec, setLastRec] = useState(0);\n  const [open, setOpen] = useState(false);\n  const [selectedDateFrom, setSelectedDateFrom] = useState(new Date());\n  const [selectedDateTo, setSelectedDateTo] = useState(new Date());\n\n    useEffect(() => {\n        HeartRateService.getUsers('001072.b2df559565e4408586c5ff8852b01b65.0530').then(response => {\n            let arr = [];\n            Object.keys(response.data).forEach(function(key) {\n                let currDate = moment(response.data[key].date.substring(0, 19));\n                let HeartRate = {\n                    bpm: response.data[key].bpm,\n                    date: currDate,\n                    user_id: response.data[key].userid\n                }\n                arr.push(HeartRate);\n            });\n            let arrTable = arr.reverse();\n            setLastRec(arrTable[0].bpm);\n            setHeartData(arrTable);\n            let data = [];\n            for(let i = 0; i < arrTable.length; i++){\n              data.push(createData(i, arrTable[i].bpm, arrTable[i].date.format('lll')));\n            }\n            setRows(data);\n            let chartdata = \"{\";\n            let currAveRate = 0;\n            for(let i = 0; i < 10; i++){\n                currAveRate += arrTable[i].bpm;\n                chartdata += '\"' + arrTable[i].date.format('') + '\": ' + arrTable[i].bpm;\n                if(i !== 9){\n                    chartdata += \",\";\n                }\n            }\n            chartdata += \"}\"\n            setData(JSON.parse(chartdata));\n            setAvgRate(Math.round(currAveRate / 10));\n        })\n    }, [])\n\n    const updateGraph = (newPage, rowsPerPageNew, arr) => {\n        let chartdata = \"{\";\n        let currAveRate = 0;\n        let count = 0;\n        if(rowsPerPageNew !== -1)\n        {\n            for(let i = (newPage * rowsPerPageNew); i < ((rowsPerPageNew * newPage) + rowsPerPageNew); i++){\n                if(i > arr.length - 1)\n                {\n                    break; \n                }\n                currAveRate += arr[i].bpm;\n                chartdata += '\"' + arr[i].date.format('') + '\": ' + arr[i].bpm + ',';\n                count++;\n            }\n        } else {\n            for(let i = 0; i < arr.length; i++){\n                currAveRate += arr[i].bpm;\n                chartdata += '\"' + arr[i].date.format('') + '\": ' + arr[i].bpm + ',';\n                count++;\n            }\n        }\n        chartdata = chartdata.substring(0, chartdata.length - 1)\n        chartdata += \"}\"\n        setData(JSON.parse(chartdata));\n        setAvgRate(Math.round(currAveRate / count));\n    }\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n        updateGraph(newPage, rowsPerPage, heartData);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n        updateGraph(0, +event.target.value, heartData);\n    };\n\n    const handleReset = () => {\n        setOpen(false);\n        let data = [];\n        for(let i = 0; i < heartData.length; i++){\n            data.push(createData(i, heartData[i].bpm, heartData[i].date.format('lll')));\n        }\n        setRows(data);\n        let chartdata = \"{\";\n        let currAveRate = 0;\n        for(let i = 0; i < 10; i++){\n            currAveRate += heartData[i].bpm;\n            chartdata += '\"' + heartData[i].date.format('') + '\": ' + heartData[i].bpm;\n            if(i !== 9){\n                chartdata += \",\";\n            }\n        }\n        chartdata += \"}\"\n        setData(JSON.parse(chartdata));\n        setAvgRate(Math.round(currAveRate / 10));\n        setPage(0);\n        setRowsPerPage(10);\n    }\n\n    const handleClickOpen = () => {\n        setOpen(true);\n      };\n    \n      const handleClose = () => {\n        setOpen(false);\n        let dateFrom = moment(selectedDateFrom);\n        let dateTo = moment(selectedDateTo);\n        if(dateFrom.isAfter(dateTo) || dateTo.isBefore(dateFrom)){\n            alert(\"The date start must not be after the end date or the end date must not be before the start date!\");\n        } else {\n            console.log(\"Hello\")\n            let tableData = [];\n            let chartData = \"{\";\n            let heartRates = 0;\n            let numRates = 0;\n            for(let i = 0; i < heartData.length; i++){\n                let currDate = heartData[i].date;\n                if(currDate.isAfter(dateFrom) && currDate.isBefore(dateTo)){\n                    heartRates += heartData[i].bpm;\n                    numRates++;\n                    tableData.push(createData(i, heartData[i].bpm, heartData[i].date.format('lll')));\n                    chartData += '\"' + heartData[i].date.format('') + '\": ' + heartData[i].bpm + ',';\n                }\n            }\n            if (numRates > 0) {\n                setAvgRate(Math.round(heartRates / numRates))\n                chartData = chartData.substring(0, chartData.length - 1)\n                chartData += \"}\"\n                setRows(tableData);\n                setData(JSON.parse(chartData));\n                setPage(0);\n                setRowsPerPage(-1);\n            } else {\n                console.log(\"No data found between those dates\");\n            }\n        }\n      };\n\n    const handleDateChangeFrom = (date) => {\n        setSelectedDateFrom(date);\n    };\n\n    const handleDateChangeTo = (date) => {\n        setSelectedDateTo(date);\n    };\n\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid>\n            <SideBar />\n        </Grid>\n        <Grid lg={10}>\n            <div className={classes.gridRight}>\n                <div className={classes.heading}>\n                    <div className={classes.rootHead}>\n                        <Grid container spacing={3}>\n                            <Grid className={classes.welcome} item xs={6}>\n                                Welcome, Bryce Schmisseur\n                                <div style={{fontSize: '20px'}}>This is your Dashboard</div>\n                            </Grid>\n                            <Grid className={classes.signIn} item xs={6}>\n                            <Button className={classes.button} onClick={handleClickOpen}>Select Dates</Button>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </div>\n                <Grid container>\n                    <Grid className={classes.gridRight} xs={6}>\n                        <Paper className={classes.rootTable}>\n                        <TableContainer className={classes.containerTable}>\n                            <Table stickyHeader aria-label=\"sticky table\">\n                            <TableHead>\n                                <TableRow>\n                                {columns.map((column) => (\n                                    <TableCell\n                                    key={column.id}\n                                    align={column.align}\n                                    style={{ minWidth: column.minWidth }}\n                                    >\n                                    {column.label}\n                                    </TableCell>\n                                ))}\n                                </TableRow>\n                            </TableHead>\n                            <TableBody id=\"currentRows\">\n                                {(rowsPerPage > 0\n                                    ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                    : rows).map((row) => {\n                                return (\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.unNum}>\n                                    {columns.map((column) => {\n                                        const value = row[column.id];\n                                        return (\n                                        <TableCell key={column.id} align={column.align}>\n                                            {column.format && typeof value === 'number' ? column.format(value) : value}\n                                        </TableCell>\n                                        );\n                                    })}\n                                    </TableRow>\n                                );\n                                })}\n                            </TableBody>\n                            </Table>\n                        </TableContainer>\n                        <TablePagination\n                            rowsPerPageOptions={[10, 25, 100, { label: 'All', value: -1 }]}\n                            component=\"div\"\n                            count={rows.length}\n                            rowsPerPage={rowsPerPage > 0 ? rowsPerPage : rows.length}\n                            page={page}\n                            onChangePage={handleChangePage}\n                            onChangeRowsPerPage={handleChangeRowsPerPage}\n                        />\n                        </Paper>\n                    </Grid>\n                    <Grid className={classes.gridRight} xs={6}>\n                        <div>\n                            <Paper className={classes.rootGraph}>\n                                <div className={classes.chartTitle}>\n                                    BPM VS Time\n                                </div>\n                            <LineChart \n                                \n                                messages={{empty: \"No data\"}}\n                                titel = \"Heart Rate\"\n                                ytitle= \"Beats per Minute (BPM)\"\n                                xtitle= \"Date Time\"\n                                data={data} />\n                            </Paper>\n                        </div>\n                        <Grid container>\n                            <Grid className={classes.gridRight} xs={6}>\n                                <Paper style={{padding: '15px'}}>\n                                    <div className={classes.titleRate}>Average Heart Rate</div>\n                                    <List>\n                                        <ListItem>\n                                            <ListItemIcon style={{fontSize: 'large'}}><FavoriteIcon /></ListItemIcon>\n                                            <ListItemText><Typography className={classes.listLabelRate}>{avgRate} BPM</Typography></ListItemText>\n                                        </ListItem>\n                                    </List>\n                                </Paper>\n                            </Grid>\n                            <Grid className={classes.gridRight} xs={6}>\n                                <Paper style={{padding: '15px'}}>\n                                    <div className={classes.titleRate}>Last Recorded</div>\n                                    <List>\n                                        <ListItem>\n                                            <ListItemIcon style={{fontSize: 'large'}}><FavoriteIcon /></ListItemIcon>\n                                            <ListItemText><Typography className={classes.listLabelRate}>{lastRec} BPM</Typography></ListItemText>\n                                        </ListItem>\n                                    </List>\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Footer />\n            </div>\n        </Grid>\n      </Grid>\n      <React.Fragment>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">Date Selector</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please select any two dates that you would like to pull information from:\n          </DialogContentText>\n          <form className={classes.form} noValidate>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DialogContentText>\n                    Start Date:\n                </DialogContentText>\n                <Grid container justify=\"space-around\">\n                    <KeyboardDatePicker\n                        margin=\"normal\"\n                        id=\"date-picker-dialog\"\n                        label=\"Date\"\n                        format=\"MM/dd/yyyy\"\n                        value={selectedDateFrom}\n                        onChange={handleDateChangeFrom}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                    /> \n                    <KeyboardTimePicker\n                        margin=\"normal\"\n                        id=\"time-picker\"\n                        label=\"Time\"\n                        value={selectedDateFrom}\n                        onChange={handleDateChangeFrom}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change time',\n                        }}\n                    />\n                </Grid>\n                <DialogContentText>\n                    End Date:\n                </DialogContentText>\n                <Grid container justify=\"space-around\">\n                    <KeyboardDatePicker\n                        margin=\"normal\"\n                        id=\"date-picker-dialog\"\n                        label=\"Date\"\n                        format=\"MM/dd/yyyy\"\n                        value={selectedDateTo}\n                        onChange={handleDateChangeTo}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                    /> \n                    <KeyboardTimePicker\n                        margin=\"normal\"\n                        id=\"time-picker\"\n                        label=\"Time\"\n                        value={selectedDateTo}\n                        onChange={handleDateChangeTo}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change time',\n                        }}\n                    />\n                </Grid>\n            </MuiPickersUtilsProvider>\n          </form>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={handleReset} color=\"primary\">\n                Reset\n            </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            <b>Select</b>\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n    </div>\n  );\n}","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Dashboard from './pages/Dashboard';\n\nfunction App() {\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route exact path=\"/Dashboard\">\n          <Dashboard />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    typography: {\n        fontFamily: [\n            '-apple-system', \n            'BlinkMacSystemFont', \n            'sans-serif',\n        ], \n    },\n});\n\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport Theme from './theme/theme';\n\nReactDOM.render(\n  <ThemeProvider theme={Theme}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}